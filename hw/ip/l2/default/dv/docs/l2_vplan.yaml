---
- Name: Direct AXI transaction
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Direct AXI transaction
  Measure: Group
  Source: "{$module_name}_l2_axi_directed_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Random AXI Transaction
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Random AXI Transaction
  Measure: Group
  Source: "{$module_name}_l2_axi_rnd_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Random Aligned addressTransaction
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: AXI transactions with address always aligned with respect to the burst
    size
  Measure: Group
  Source: "{$module_name}_l2_axi_rnd_discr_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Random AXI Alternate Write & Read
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Alternate AXI WRITE & READ transactions with all other transaction
    fields randomized with suitable constraints.
  Measure: Group
  Source: "{$module_name}_l2_axi_m_blking_wrrd_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Random sequence of write & read transaction
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Sequence of write transactions  followed by a sequence of read transactions
    with all other transaction fields randomized
  Measure: Group
  Source: "{$module_name}_l2_axi_ran_seq_wr_rd_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Random write Transaction before address
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Write data before address
  Measure: Group
  Source: "{$module_name}_l2_axi_m_write_data_bfr_addr_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Random Transaction with burst size equals data width
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Random transactions with burst size equal to data width of AXI bus 
    aligned address and all other control fields
  Measure: Group
  Source: "{$module_name}_l2_axi_brstsz_equalto_dataw_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Random AXI Transaction with rand attributes
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Transaction attributes of none  modifiable  buffer-able  read-allocate
    and write allocate
  Measure: Group
  Source: "{$module_name}_l2_axi_rnd_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Parallel Transaction [ Update ]
  Type: UVM
  Requirement ID: L2_FEAT_7,L2_FEAT_8
  Description: Transaction are sent in parallel with random dealy to check the capability
    of independent read and writes and also verify the transactions going to same bank retain the order.
  Measure: Group
  Source: "{$module_name}_l2_random_delay_wr_rd_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Full Address check [ Update]
  Type: UVM
  Requirement ID: L2_FEAT_5, L2_FEAT_6
  Description: Transaction are sent to starting  middle  end address of all the ram
    inside each bank
  Measure: Group
  Source: "{$module_name}_l2_all_bank_all_ram_addr_check_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Out of boundary check [update]
  Type: UVM
  Requirement ID: L2_FEAT_3, L2_FEAT_9
  Description: Transaction are sent out of address range 
  Measure: Group
  Source: "{$module_name}_l2_addr_out_of_range_check_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Operating clk Frequency [Update]
  Type: UVM
  Requirement ID: L2_CLK_0, L2_FEAT_11
  Description: To check the operating clock frequency @1.2GHz
  Measure: Assertions
  Source: Assertios
  Covergroups: Assertions
  Coverpoints if applicable: Assertions
  '': ''
- Name: Pipelining Latency [Update]
  Type: UVM
  Requirement ID: L2_PERF_0, L2_PERF_1
  Description: To check the lentency of the request and reponse cycles per bank
  Measure: Group
  Source: "{$module_name}_l2_perf_throughput_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Back to back request [ Update]
  Type: UVM
  Requirement ID: L2_FEAT_7
  Description: Transaction with back to back requests to the same channel 
  Measure: Group
  Source: "{$module_name}_l2_clk_back_2_back_txn_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Reset Handling
  Type: UVM
  Requirement ID: L2_RST_0
  Description: Providing reset betweeen the AXI transactions
  Measure: Group
  Source: "{$module_name}_l2_reset_toggle_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Consecutive bank Access [Update]
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Transactions with address/transfer size sweeps consecutive
  Measure: Group
  Source: "{$module_name}_l2_cons_bank_access_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Stress check [Update]
  Type: UVM
  Requirement ID: L2_FEAT_4
  Description: Transaction are send back to back request with no ready signals deasserted
  Measure: Group
  Source: "{$module_name}_l2_stress _*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Narrow Transactions
  Type: UVM
  Requirement ID: L2_FEAT_0, L2_FEAT_1,L2_FEAT_4
  Description: Verify that the Slave ports can handle narrow bursts
  Measure: Group
  Source: "{$module_name}_l2_axi_narrow_txn_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Transaction with wrap
  Type: UVM
  Requirement ID: L2_FEAT_0, L2_FEAT_1, L2_FEAT_4
  Description: Verify that the Slave port supports all legal WRAP bursts
  Measure: Group
  Source: "{$module_name}_l2_axi_wrap_txn_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Power Test [New]
  Type: UVM
  Requirement ID: L2_PWR_DYN_1, L2_PWR_IDLE_0, L2_FEAT_12
  Description: Verify the  memory power pins and the modes
  Measure: Group
  Source: "{$module_name}_l2_pwer_*test"
  Covergroups: TODO
  Coverpoints if applicable: TODO  - User defined cover groups
  '': ''
- Name: APB interface [New]
  Type: UVM
  Requirement ID: L2_FEAT_16
  Description: Connecting the APB interface and verifying the access to the register
  Measure: Group
  Source: "{$module_name}_l2_apb_base_*test"
  Covergroups: "{$module_name}_l2_apb_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: APB_VIP_COVERPOINT
  '': ''
- Name: Debug [New] {Trace}
  Type: UVM
  Requirement ID: L2_DBG_0
  Description: Connecting the debug interface and verifying the mem transactions via
    debug
  Measure: Group
  Source: "{$module_name}_l2_debug_*test"
  Covergroups: TODO
  Coverpoints if applicable: TODO  User defined cover groups
  '': ''
- Name: Clockdivider [new]
  Type: UVM
  Requirement ID: L2_CLK_2
  Description: Verify the clock dividing logic via the registers
  Measure: Asserions
  Source: "{$module_name}_l2_divider_*test"
  Covergroups: TODO
  Coverpoints if applicable: TODO  User defined cover groups
  '': ''
- Name: REGISTER test TODO
  Type: UVM
  Requirement ID: L2_FEAT_15
  Description: TODO
  Measure: TODO
  Source: TODO
  Covergroups: TODO
  Coverpoints if applicable: TODO  User defined cover groups
  '': ''
- Name: Unaligned tranfers[Update]
  Type: UVM
  Requirement ID: L2_FEAT_10
  Description: Transactions are sent with unaligned transfers and verif the data
  Measure: Group
  Source: "{$module_name}_l2_unaligned_transfer_*test"
  Covergroups: "{$module_name}_l2_axi_slv_covergroup st_axi_*cg"
  Coverpoints if applicable: AXI_VIP_COVERPOINT
  '': ''
- Name: Unaligned transfers with Narrow Transfer
  Type: UVM
  Requirement ID: L2_FEAT_10
  Description: Transactions are send with unaligned narrow transfers and verify the
    data
  Measure: Group
  Source: "{$module_name}_l2_unaligned_narrow_transfer_*test"
  Covergroups: TODO
  Coverpoints if applicable: TODO  User defined cover groups
  '': ''

