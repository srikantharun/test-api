// (C) Copyright Axelera AI 2021
// All Rights Reserved
// *** Axelera AI Confidential ***
//
// Description: L2 default configuration package
// Owner: Manuel Oliveira <manuel.oliveira@axelera.ai>

`ifndef L2_CFG_PKG_SV
`define L2_CFG_PKG_SV

package l2_cfg_pkg;

  // =======================================================================
  // L2 default configuration
  // =======================================================================

  // L2 AXI configuraton
  // ---------------------
  parameter int unsigned L2_AXI_DATA_WIDTH = 512;
  parameter int unsigned L2_AXI_ID_WIDTH = 4;
  parameter int unsigned L2_AXI_ADDR_WIDTH = 24;

  // L2 memory size
  //----------------------
  // The size of the L2 module memory
  // L2 memory will be instiantiated.
  // Following parameters should be updated only during build time
  parameter int unsigned L2_MEM_SIZE = cc_utils_pkg::mem_capacity(16, cc_utils_pkg::MiB);

  // L2 Bank configuration
  //----------------------
  // The number of banks in which the L2 address space is divided
  parameter int unsigned L2_NUM_BANKS = 16;
  // Caution: Dependent parameter, do not modify.
  parameter int unsigned L2_BANK_DATA_WIDTH = L2_AXI_DATA_WIDTH;

  // L2 Tech RAM instance
  //----------------------
  // Define the physical ram instance dimensions
  parameter int unsigned L2_SRAM_DATA_WIDTH = 128;
  parameter int unsigned L2_SRAM_DATA_DEPTH = 4096;
  // Caution: Dependent parameter, do not modify.
  parameter int unsigned L2_NUM_SRAMS = L2_BANK_DATA_WIDTH / L2_SRAM_DATA_WIDTH;
  parameter int unsigned L2_SRAM_SIZE = L2_SRAM_DATA_DEPTH * L2_SRAM_DATA_WIDTH;
  parameter int unsigned L2_SRAM_SIZE_BYTES = L2_SRAM_SIZE / 8
                                            + (L2_SRAM_SIZE % 8 != 0);

  // L2 bank instance
  //-------------------
  // Caution: Dependent parameter, do not modify.
  parameter int unsigned L2_BANK_SIZE_BYTES = L2_MEM_SIZE / L2_NUM_BANKS;

  // L2 RAM instances
  //-------------------
  // Caution: Dependent parameter, do not modify.
  parameter int unsigned L2_NUM_RAMS = L2_BANK_SIZE_BYTES / (L2_NUM_SRAMS * L2_SRAM_SIZE_BYTES);

  // ---------------------------------------------------------------
  // Pipelining Settings
  // ---------------------------------------------------------------
  parameter int unsigned L2_REQ_LATENCY = 5;
  parameter int unsigned L2_RSP_LATENCY = 5;
  parameter int unsigned L2_RSP_GROUPS = 6;

  parameter int unsigned L2_REQ_WIRE_LATENCY[L2_NUM_BANKS] = {
    32'd3, //  0 Bank
    32'd3, //  1 Bank
    32'd3, //  2 Bank
    32'd3, //  3 Bank
    32'd3, //  4 Bank
    32'd3, //  5 Bank
    32'd2, //  6 Bank
    32'd2, //  7 Bank
    32'd2, //  8 Bank
    32'd2, //  9 Bank
    32'd2, // 10 Bank
    32'd2, // 11 Bank
    32'd1, // 12 Bank
    32'd1, // 13 Bank
    32'd1, // 14 Bank
    32'd1  // 15 Bank
  };

  parameter int unsigned L2_RSP_STAGE_LATENCY[L2_RSP_GROUPS] = {
    32'd1, //  Group 0
    32'd1, //  Group 1
    32'd2, //  Group 2
    32'd2, //  Group 3
    32'd3, //  Group 4
    32'd3  //  Group 5
  };

  parameter int unsigned L2_RSP_GROUP[L2_NUM_BANKS] = {
    32'd5, //  0 Bank
    32'd5, //  1 Bank
    32'd5, //  2 Bank
    32'd4, //  3 Bank
    32'd4, //  4 Bank
    32'd4, //  5 Bank
    32'd3, //  6 Bank
    32'd3, //  7 Bank
    32'd3, //  8 Bank
    32'd2, //  9 Bank
    32'd2, // 10 Bank
    32'd2, // 11 Bank
    32'd1, // 12 Bank
    32'd1, // 13 Bank
    32'd1, // 14 Bank
    32'd0  // 15 Bank
  };

  // SRAM Configuration Chain Settings
  // ---------------------------------
  // Arbitrary chain order for sram config signals
  parameter int unsigned L2_ARB_CHAIN_ORDER [L2_NUM_BANKS][L2_NUM_RAMS][L2_NUM_SRAMS] = '{
    // Bank 0
    '{
        // RAM 0
        {
          32'd69,   // (0,0,0)
          32'd68,   // (0,0,1)
          32'd67,   // (0,0,2)
          32'd66    // (0,0,3)
        },
        // RAM 1
        {
          32'd62,   // (0,1,0)
          32'd63,   // (0,1,1)
          32'd64,   // (0,1,2)
          32'd65    // (0,1,3)
        },
        // RAM 2
        {
          32'd25,   // (0,2,0)
          32'd24,   // (0,2,1)
          32'd23,   // (0,2,2)
          32'd22    // (0,2,3)
        },
        // RAM 3
        {
          32'd18,   // (0,3,0)
          32'd19,   // (0,3,1)
          32'd20,   // (0,3,2)
          32'd21    // (0,3,3)
        }
    },
    // Bank 1
    '{
        // RAM 0
        {
          32'd157,   // (1,0,0)
          32'd156,   // (1,0,1)
          32'd155,   // (1,0,2)
          32'd154    // (1,0,3)
        },
        // RAM 1
        {
          32'd150,   // (1,1,0)
          32'd151,   // (1,1,1)
          32'd152,   // (1,1,2)
          32'd153    // (1,1,3)
        },
        // RAM 2
        {
          32'd113,   // (1,2,0)
          32'd112,   // (1,2,1)
          32'd111,   // (1,2,2)
          32'd110    // (1,2,3)
        },
        // RAM 3
        {
          32'd106,   // (1,3,0)
          32'd107,   // (1,3,1)
          32'd108,   // (1,3,2)
          32'd109    // (1,3,3)
        }
    },
    // Bank 2
    '{
        // RAM 0
        {
          32'd192,   // (2,0,0)
          32'd193,   // (2,0,1)
          32'd194,   // (2,0,2)
          32'd195    // (2,0,3)
        },
        // RAM 1
        {
          32'd199,   // (2,1,0)
          32'd198,   // (2,1,1)
          32'd197,   // (2,1,2)
          32'd196    // (2,1,3)
        },
        // RAM 2
        {
          32'd232,   // (2,2,0)
          32'd233,   // (2,2,1)
          32'd234,   // (2,2,2)
          32'd235    // (2,2,3)
        },
        // RAM 3
        {
          32'd239,   // (2,3,0)
          32'd238,   // (2,3,1)
          32'd237,   // (2,3,2)
          32'd236    // (2,3,3)
        }
    },
    // Bank 3
    '{
        // RAM 0
        {
          32'd73,   // (3,0,0)
          32'd72,   // (3,0,1)
          32'd71,   // (3,0,2)
          32'd70    // (3,0,3)
        },
        // RAM 1
        {
          32'd58,   // (3,1,0)
          32'd59,   // (3,1,1)
          32'd60,   // (3,1,2)
          32'd61    // (3,1,3)
        },
        // RAM 2
        {
          32'd29,   // (3,2,0)
          32'd28,   // (3,2,1)
          32'd27,   // (3,2,2)
          32'd26    // (3,2,3)
        },
        // RAM 3
        {
          32'd14,   // (3,3,0)
          32'd15,   // (3,3,1)
          32'd16,   // (3,3,2)
          32'd17    // (3,3,3)
        }
    },
    // Bank 4
    '{
        // RAM 0
        {
          32'd161,   // (4,0,0)
          32'd160,   // (4,0,1)
          32'd159,   // (4,0,2)
          32'd158    // (4,0,3)
        },
        // RAM 1
        {
          32'd146,   // (4,1,0)
          32'd147,   // (4,1,1)
          32'd148,   // (4,1,2)
          32'd149    // (4,1,3)
        },
        // RAM 2
        {
          32'd117,   // (4,2,0)
          32'd116,   // (4,2,1)
          32'd115,   // (4,2,2)
          32'd114    // (4,2,3)
        },
        // RAM 3
        {
          32'd102,   // (4,3,0)
          32'd103,   // (4,3,1)
          32'd104,   // (4,3,2)
          32'd105    // (4,3,3)
        }
    },
    // Bank 5
    '{
        // RAM 0
        {
          32'd188,   // (5,0,0)
          32'd189,   // (5,0,1)
          32'd190,   // (5,0,2)
          32'd191    // (5,0,3)
        },
        // RAM 1
        {
          32'd203,   // (5,1,0)
          32'd202,   // (5,1,1)
          32'd201,   // (5,1,2)
          32'd200    // (5,1,3)
        },
        // RAM 2
        {
          32'd228,   // (5,2,0)
          32'd229,   // (5,2,1)
          32'd230,   // (5,2,2)
          32'd231    // (5,2,3)
        },
        // RAM 3
        {
          32'd243,   // (5,3,0)
          32'd242,   // (5,3,1)
          32'd241,   // (5,3,2)
          32'd240    // (5,3,3)
        }
    },
    // Bank 6
    '{
        // RAM 0
        {
          32'd77,   // (6,0,0)
          32'd76,   // (6,0,1)
          32'd75,   // (6,0,2)
          32'd74    // (6,0,3)
        },
        // RAM 1
        {
          32'd54,   // (6,1,0)
          32'd55,   // (6,1,1)
          32'd56,   // (6,1,2)
          32'd57    // (6,1,3)
        },
        // RAM 2
        {
          32'd33,   // (6,2,0)
          32'd32,   // (6,2,1)
          32'd31,   // (6,2,2)
          32'd30    // (6,2,3)
        },
        // RAM 3
        {
          32'd10,   // (6,3,0)
          32'd11,   // (6,3,1)
          32'd12,   // (6,3,2)
          32'd13    // (6,3,3)
        }
    },
    // Bank 7
    '{
        // RAM 0
        {
          32'd165,   // (7,0,0)
          32'd164,   // (7,0,1)
          32'd163,   // (7,0,2)
          32'd162    // (7,0,3)
        },
        // RAM 1
        {
          32'd142,   // (7,1,0)
          32'd143,   // (7,1,1)
          32'd144,   // (7,1,2)
          32'd145    // (7,1,3)
        },
        // RAM 2
        {
          32'd121,   // (7,2,0)
          32'd120,   // (7,2,1)
          32'd119,   // (7,2,2)
          32'd118    // (7,2,3)
        },
        // RAM 3
        {
          32'd98,   // (7,3,0)
          32'd99,   // (7,3,1)
          32'd100,   // (7,3,2)
          32'd101    // (7,3,3)
        }
    },
    // Bank 8
    '{
        // RAM 0
        {
          32'd184,   // (8,0,0)
          32'd185,   // (8,0,1)
          32'd186,   // (8,0,2)
          32'd187    // (8,0,3)
        },
        // RAM 1
        {
          32'd207,   // (8,1,0)
          32'd206,   // (8,1,1)
          32'd205,   // (8,1,2)
          32'd204    // (8,1,3)
        },
        // RAM 2
        {
          32'd224,   // (8,2,0)
          32'd225,   // (8,2,1)
          32'd226,   // (8,2,2)
          32'd227    // (8,2,3)
        },
        // RAM 3
        {
          32'd247,   // (8,3,0)
          32'd246,   // (8,3,1)
          32'd245,   // (8,3,2)
          32'd244    // (8,3,3)
        }
    },
    // Bank 9
    '{
        // RAM 0
        {
          32'd81,   // (9,0,0)
          32'd80,   // (9,0,1)
          32'd79,   // (9,0,2)
          32'd78    // (9,0,3)
        },
        // RAM 1
        {
          32'd50,   // (9,1,0)
          32'd51,   // (9,1,1)
          32'd52,   // (9,1,2)
          32'd53    // (9,1,3)
        },
        // RAM 2
        {
          32'd37,   // (9,2,0)
          32'd36,   // (9,2,1)
          32'd35,   // (9,2,2)
          32'd34    // (9,2,3)
        },
        // RAM 3
        {
          32'd6,   // (9,3,0)
          32'd7,   // (9,3,1)
          32'd8,   // (9,3,2)
          32'd9    // (9,3,3)
        }
    },
    // Bank 10
    '{
        // RAM 0
        {
          32'd169,   // (10,0,0)
          32'd168,   // (10,0,1)
          32'd167,   // (10,0,2)
          32'd166    // (10,0,3)
        },
        // RAM 1
        {
          32'd138,   // (10,1,0)
          32'd139,   // (10,1,1)
          32'd140,   // (10,1,2)
          32'd141    // (10,1,3)
        },
        // RAM 2
        {
          32'd125,   // (10,2,0)
          32'd124,   // (10,2,1)
          32'd123,   // (10,2,2)
          32'd122    // (10,2,3)
        },
        // RAM 3
        {
          32'd94,   // (10,3,0)
          32'd95,   // (10,3,1)
          32'd96,   // (10,3,2)
          32'd97    // (10,3,3)
        }
    },
    // Bank 11
    '{
        // RAM 0
        {
          32'd180,   // (11,0,0)
          32'd181,   // (11,0,1)
          32'd182,   // (11,0,2)
          32'd183    // (11,0,3)
        },
        // RAM 1
        {
          32'd211,   // (11,1,0)
          32'd210,   // (11,1,1)
          32'd209,   // (11,1,2)
          32'd208    // (11,1,3)
        },
        // RAM 2
        {
          32'd220,   // (11,2,0)
          32'd221,   // (11,2,1)
          32'd222,   // (11,2,2)
          32'd223    // (11,2,3)
        },
        // RAM 3
        {
          32'd251,   // (11,3,0)
          32'd250,   // (11,3,1)
          32'd249,   // (11,3,2)
          32'd248    // (11,3,3)
        }
    },
    // Bank 12
    '{
        // RAM 0
        {
          32'd85,   // (12,0,0)
          32'd84,   // (12,0,1)
          32'd83,   // (12,0,2)
          32'd82    // (12,0,3)
        },
        // RAM 1
        {
          32'd46,   // (12,1,0)
          32'd47,   // (12,1,1)
          32'd48,   // (12,1,2)
          32'd49    // (12,1,3)
        },
        // RAM 2
        {
          32'd41,   // (12,2,0)
          32'd40,   // (12,2,1)
          32'd39,   // (12,2,2)
          32'd38    // (12,2,3)
        },
        // RAM 3
        {
          32'd2,   // (12,3,0)
          32'd3,   // (12,3,1)
          32'd4,   // (12,3,2)
          32'd5    // (12,3,3)
        }
    },
    // Bank 13
    '{
        // RAM 0
        {
          32'd173,   // (13,0,0)
          32'd172,   // (13,0,1)
          32'd171,   // (13,0,2)
          32'd170    // (13,0,3)
        },
        // RAM 1
        {
          32'd134,   // (13,1,0)
          32'd135,   // (13,1,1)
          32'd136,   // (13,1,2)
          32'd137    // (13,1,3)
        },
        // RAM 2
        {
          32'd129,   // (13,2,0)
          32'd128,   // (13,2,1)
          32'd127,   // (13,2,2)
          32'd126    // (13,2,3)
        },
        // RAM 3
        {
          32'd90,   // (13,3,0)
          32'd91,   // (13,3,1)
          32'd92,   // (13,3,2)
          32'd93    // (13,3,3)
        }
    },
    // Bank 14
    '{
        // RAM 0
        {
          32'd176,   // (14,0,0)
          32'd177,   // (14,0,1)
          32'd178,   // (14,0,2)
          32'd179    // (14,0,3)
        },
        // RAM 1
        {
          32'd215,   // (14,1,0)
          32'd214,   // (14,1,1)
          32'd213,   // (14,1,2)
          32'd212    // (14,1,3)
        },
        // RAM 2
        {
          32'd216,   // (14,2,0)
          32'd217,   // (14,2,1)
          32'd218,   // (14,2,2)
          32'd219    // (14,2,3)
        },
        // RAM 3
        {
          32'd255,   // (14,3,0)
          32'd254,   // (14,3,1)
          32'd253,   // (14,3,2)
          32'd252    // (14,3,3)
        }
    },
    // Bank 15
    '{
        // RAM 0
        {
          32'd175,   // (15,0,0)
          32'd174,   // (15,0,1)
          32'd87,   // (15,0,2)
          32'd86    // (15,0,3)
        },
        // RAM 1
        {
          32'd132,   // (15,1,0)
          32'd133,   // (15,1,1)
          32'd44,   // (15,1,2)
          32'd45    // (15,1,3)
        },
        // RAM 2
        {
          32'd131,   // (15,2,0)
          32'd130,   // (15,2,1)
          32'd43,   // (15,2,2)
          32'd42    // (15,2,3)
        },
        // RAM 3
        {
          32'd88,   // (15,3,0)
          32'd89,   // (15,3,1)
          32'd0,   // (15,3,2)
          32'd1    // (15,3,3)
        }
    }
};


endpackage
`endif  //L2_CFG_PKG_SV
