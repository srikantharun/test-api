GIT_REPO := $(shell git rev-parse --show-toplevel)
include $(GIT_REPO)/hw/scripts/flow_makefiles/_pre.mk

ifeq (${DFT},1)
SIM_FLOW_CONFIG ?= ../sim-questa/simulation_config.dft.mk
else
SIM_FLOW_CONFIG ?= ../sim-questa/simulation_config.mk
endif

-include $(SIM_FLOW_CONFIG)

########################################
##@ Audit setup:
########################################

SIGNOFFS ?=

SIGNOFFS+=$(GIT_REPO)/scripts/audit/general_signoff/spyglass.aso
SIGNOFFS+=$(GIT_REPO)/scripts/audit/general_signoff/rtla.aso
ifeq (${DFT},1)
SIGNOFFS+=$(GIT_REPO)/scripts/audit/general_signoff/dft.aso
endif

##% MILESTONE @@ {(gold)} @@ Choose the release milestone
MILESTONE ?= gold

##% RELEASE_DIR @@ {(/home/release/europa/)} @@ The release directory
RELEASE_DIR = /home/release/europa/


audit_todo: ## Sign off the open TODOs
	mkdir -p audit_todo
	$(GIT_REPO)/scripts/audit/audit_todo.sh $(BENDER_MANI_LOC) >> audit_todo/audit_todo.log

audit_waive: ## Sign off the open Waivers
	mkdir -p audit_waive
	$(GIT_REPO)/scripts/audit/audit_waive.sh $(BENDER_MANI_LOC) >> audit_waive/audit_waive.log

certificate.txt: audit_todo audit_waive ## Create the certificate
	$(GIT_REPO)/scripts/audit/certify.sh -m $(MILESTONE) -r $(BENDER_MANI_LOC) -e "$(BENDER_TARGETS_EXT)" -b $(IP_NAME) -t $(TOP_LEVEL_MODULES) $(SIGNOFFS)


release: certificate.txt ## Run the release
	$(GIT_REPO)/scripts/audit/release.py -c certificate.txt

########################################
##@ Clean targets:
########################################

CLEAN_PREREQUISITES += clean_audit
.PHONY: clean_audit
clean_audit: ## Remove the logfiles and reports generated by audit
	rm -rf audit_todo
	rm -rf audit_waive
	rm -f audit_run.log
	rm -f certificate.txt
	rm -f certificate.log
	rm -rf audit_reports
	rm -rf audit_signoffs

include $(GIT_REPO)/hw/scripts/flow_makefiles/_post.mk

