# Generator setup

load questa via modules
export QUESTA_HOME=$QUESTASIM_HOME

# Running

# Build once on every change to the generator src
make -f rag.mk rag_build

# Generate tests - will be copied automatically
make -f rag.mk rag_gen SEED=234
# cp -a generation_out/asm_test/. ../../asm/tests/random

# Clean generation_out
make -f rag.mk rag_clean

# When running from e.g. sim-mini-soc omit -f rag.mk like this:
make rag_build

# When using different than default riscv_core_setting.sv place it alongside recipes and do:
make rag_build TARGET=foo

# To run a different target (yaml testlist) place it in the folder under target/ and do
make rag_get TARGET=foo

# Running tests generated by RAG

# Running a specific generated test
make run_vsim TESTNAME=fp_arith_new SEED=12345 ELF=$REPO_ROOT/hw/vendor/axelera/cva6v/default/dv/asm/tests/build/random/fp_arith_0

# Running a specific regression test
make run_vsim TESTNAME=debug_1st_reg_illeggal SEED=12345 ELF=/data/regression/europa/verif_team/tests/cva6v/asm/rag/240731/12345/build/base_w_illegal_0

# Running a specific regression test - verifsdk yaml based approach
make vsdk_vsim REGRESS_VERIFSDK_TEST=cva6v_rag_240903_240903_fp_1

# Running recently generated tests
make regress_vsim REGRESS_VERIFSDK_LABEL=CVA6V_DV_RAG_LOCAL_TESTS REGRESS_VERIFSDK_PLATFORM=cva6v.MINI_SOC

# Extra args:
NODEPS=1 (!!! for vsdk_vsim its NO_DEPS) -> don't recompile, speedup
DEBUG=1 -> waves
SEED=12345 -> seed
GRID_NUM_CPUS=8 -> speedup

# Ranking

# Running a specific generated test
make run_vsim TESTNAME=fp_arith_new SEED=12345 ELF=$REPO_ROOT/hw/vendor/axelera/cva6v/default/dv/asm/tests/build/random/fp_arith_0

# Running a specific regression test
make run_vsim TESTNAME=debug_1st_reg_illeggal SEED=12345 ELF=/data/regression/europa/verif_team/tests/cva6v/asm/rag/240731/12345/build/base_w_illegal_0

# Running a specific regression test - verifsdk yaml based approach
make vsdk_vsim REGRESS_VERIFSDK_TEST=cva6v_rag_240903_240903_fp_1

# Running recently generated tests
make regress_vsim REGRESS_VERIFSDK_LABEL=CVA6V_DV_RAG_LOCAL_TESTS REGRESS_VERIFSDK_PLATFORM=cva6v.MINI_SOC

# Extra args:
NODEPS=1 (!!! for vsdk_vsim its NO_DEPS) -> don't recompile, speedup
DEBUG=1 -> waves
SEED=12345 -> seed
GRID_NUM_CPUS=8 -> speedup

# Ranking
run each test
vcover merge -testassociated -out merged.ucdb ./build_vsim_ai_core_cva6v/run_vsim_*/*.ucdb

# Get the XML
vcover report -recursive -xml -output rreport_path.xml -instance=/hdl_top/i_gc_system/gen_cva6v_top[0]/i_cva6v_top/* merged.ucdb

# Rank the tests

vcover ranktest merged.ucdb -path /hdl_top/i_gc_system/gen_cva6v_top[0]/i_cva6v_top
or vcover ranktest <list of ucdbs>

# Visualize coverage
srun --x11 vis -viewcov build_vsim_ai_core_cva6v/run_vsim_cva6v_ax_asm_random_fp_plus_10k_test_1/coverage_fp_plus_10k.ucdb

