- test: fparith
  description: >
    Base ISA + floating point, FPU arithmetic stress
  gen_opts: >
    +enable_interrupt=1
    +enable_fp_extension=1
    +instr_cnt=500
    +boot_mode=m
    +num_of_sub_program=0
    +directed_instr_0=riscv_fpu_arithmetic_stream,10
    +directed_instr_1=riscv_fpu_only_arithmetic_stream,10
    +no_branch_jump=1
    +report_stats=1
  iterations: 3
  gen_test: riscv_instr_base_test
  rtl_test: core_base_test
#
#- test: fpldstmisaligned
#  description: >
#    Base ISA with misaligned ldst, less instr as trap handlers will add ~4x instrs
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_misaligned_load_store=1
#    +instr_cnt=4000
#    +boot_mode=m
#    +num_of_sub_program=0
#    +no_branch_jump=1
#    +directed_instr_0=riscv_load_store_stress_instr_stream,10
#    +directed_instr_1=riscv_load_store_rand_instr_stream,10
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: fpwillegal
#  description: >
#    Base ISA w illegal instrs mixed in, 20/1k illegals -> 2k illegals
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +instr_cnt=5000
#    +boot_mode=m
#    +num_of_sub_program=0
#    +no_branch_jump=1
#    +illegal_instr_ratio=30
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: fpldst
#  description: >
#    Base ISA with all the ldst streams
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +boot_mode=m
#    +instr_cnt=5000
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_stress_instr_stream,5
#    +directed_instr_1=riscv_load_store_rand_instr_stream,5
#    +directed_instr_2=riscv_hazard_instr_stream,5
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,5
#    +directed_instr_4=riscv_load_store_rand_addr_instr_stream,5
#    +directed_instr_5=riscv_multi_page_load_store_instr_stream,5
#    +directed_instr_6=riscv_mem_region_stress_test,5
#    +directed_instr_7=riscv_amo_instr_stream,3
#    +boot_mode=m
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: fpjump
#  description: >
#    Base ISA, stress back-to-back jump instructions
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +instr_cnt=10000
#    +boot_mode=m
#    +num_of_sub_program=2
#    +directed_instr_1=riscv_jal_instr,12
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: fpldstsmode
#  description: >
#    Base ISA with all the ldst streams
#  gen_opts: >
#    +boot_mode=s
#    +enable_interrupt=1
#    +instr_cnt=2500
#    +enable_fp_extension=1
#    +enable_misaligned_load_store=1
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_stress_instr_stream,5
#    +directed_instr_1=riscv_load_store_rand_instr_stream,5
#    +directed_instr_2=riscv_hazard_instr_stream,5
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,5
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,5
#    +directed_instr_5=riscv_mem_region_stress_test,5
#    +directed_instr_6=riscv_fpu_arithmetic_stream,5
#    +report_stats=1
#  iterations: 45
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: fpldstumode
#  description: >
#    Base ISA with all the ldst streams
#  gen_opts: >
#    +boot_mode=u
#    +enable_interrupt=1
#    +instr_cnt=2000
#    +enable_fp_extension=1
#    +enable_misaligned_load_store=1
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_stress_instr_stream,5
#    +directed_instr_1=riscv_load_store_rand_instr_stream,5
#    +directed_instr_2=riscv_hazard_instr_stream,5
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,5
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,5
#    +directed_instr_5=riscv_mem_region_stress_test,5
#    +directed_instr_6=riscv_fpu_arithmetic_stream,5
#    +no_csr_instr=1
#    +report_stats=1
#  iterations: 45
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: fpatomics
#  description: >
#    Base ISA with atomic streams
#  gen_opts: >
#    +instr_cnt=4500
#    +enable_interrupt=1
#    +boot_mode=s
#    +enable_fp_extension=1
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_lr_sc_instr_stream,15
#    +directed_instr_1=riscv_amo_instr_stream,15
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: fpadvanced
#  description: >
#    Base ISA with all the goodies
#  gen_opts: >
#    +instr_cnt=6000
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +num_of_sub_program=0
#    +boot_mode=m
#    +directed_instr_0=riscv_load_store_rand_instr_stream,2
#    +directed_instr_1=riscv_loop_instr,1
#    +directed_instr_2=riscv_hazard_instr_stream,2
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,2
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,2
#    +directed_instr_5=riscv_mem_region_stress_test,2
#    +directed_instr_6=riscv_jal_instr,1
#    +directed_instr_7=riscv_load_store_stress_instr_stream,2
#    +directed_instr_8=riscv_load_store_rand_addr_instr_stream,2
#    +directed_instr_9=riscv_lr_sc_instr_stream,1
#    +directed_instr_10=riscv_amo_instr_stream,1
#    +directed_instr_11=riscv_int_numeric_corner_stream,2
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test

#- test: vldstarith
#  description: >
#    Base ISA with all the ldst streams
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +boot_mode=m
#    +instr_cnt=500
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_stress_instr_stream,3
#    +directed_instr_1=riscv_multi_page_load_store_instr_stream,3
#    +directed_instr_2=riscv_mem_region_stress_test,3
#    +directed_instr_3=riscv_amo_instr_stream,3
#    +directed_instr_4=riscv_vector_load_store_instr_stream,10
#    +directed_instr_5=riscv_fpu_arithmetic_stream,10
#    +directed_instr_6=riscv_fpu_only_arithmetic_stream,1
#    +boot_mode=m
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test

#- test: fp_advanced_ldst
#  description: >
#    Base ISA with all the goodies
#  gen_opts: >
#    +instr_cnt=7000
#    +boot_mode=m
#    +enable_fp_extension=1
#    +enable_interrupt=1
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_rand_instr_stream,5
#    +directed_instr_1=riscv_loop_instr,5
#    +directed_instr_2=riscv_hazard_instr_stream,5
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,5
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,5
#    +directed_instr_9=riscv_lr_sc_instr_stream,25
#    +directed_instr_10=riscv_amo_instr_stream,25
#    +directed_instr_11=riscv_int_numeric_corner_stream,5
#    +directed_instr_15=riscv_load_store_w_hazards_rand_instr_stream,15
#    +report_stats=1
#  iterations: 24
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test

#- test: fp_advanced_machine
#  description: >
#    Base ISA with all the goodies
#  gen_opts: >
#    +instr_cnt=700
#    +boot_mode=m
#    +enable_fp_extension=1
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_rand_instr_stream,5
#    +directed_instr_1=riscv_loop_instr,5
#    +directed_instr_2=riscv_hazard_instr_stream,5
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,5
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,5
#    +directed_instr_5=riscv_mem_region_stress_test,5
#    +directed_instr_6=riscv_jal_instr,5
#    +directed_instr_7=riscv_load_store_stress_instr_stream,5
#    +directed_instr_8=riscv_load_store_rand_addr_instr_stream,5
#    +directed_instr_9=riscv_lr_sc_instr_stream,5
#    +directed_instr_10=riscv_amo_instr_stream,5
#    +directed_instr_11=riscv_int_numeric_corner_stream,5
#    +directed_instr_12=riscv_load_store_word_aligned_hazard_instr_stream,5
#    +directed_instr_13=riscv_fpu_arithmetic_stream,5
#    +directed_instr_14=riscv_fpu_only_arithmetic_stream,5
#    +directed_instr_15=riscv_load_store_w_hazards_rand_instr_stream,5
#    +report_stats=1
#  iterations: 1
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test

#- test: varith
#  description: >
#    Base ISA + floating point, FPU arithmetic stress
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +instr_cnt=400
#    +boot_mode=m
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_fpu_arithmetic_stream,10
#    +directed_instr_1=riscv_fpu_only_arithmetic_stream,10
#    +no_branch_jump=1
#    +report_stats=1
#  iterations: 2
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test

#- test: cva6v_rag_V_interleave_vlssege_v
#  description: >
#    base + fp + vector test, Vector Base (Load and Stores) Instructions
#  gen_opts: >
#    +instr_cnt=1000
#    +num_of_sub_program=0
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +no_fence=1
#    +no_branch_jump=1
#    +no_csr_instr=1
#    +boot_mode=m
#    +specific_v_instructions=VLSSEGE_V
#    +directed_instr_0=riscv_vector_load_store_instr_stream,500
#    +report_stats=1
#  iterations: 20
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test

#
#- test: vldstmisaligned
#  description: >
#    Base ISA with misaligned ldst, less instr as trap handlers will add ~4x instrs
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +enable_misaligned_load_store=1
#    +instr_cnt=400
#    +boot_mode=m
#    +num_of_sub_program=0
#    +no_branch_jump=1
#    +directed_instr_0=riscv_load_store_stress_instr_stream,10
#    +directed_instr_1=riscv_load_store_rand_instr_stream,10
#    +report_stats=1
#  iterations: 24
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: vwillegal
#  description: >
#    Base ISA w illegal instrs mixed in, 20/1k illegals -> 2k illegals
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +instr_cnt=400
#    +directed_instr_0=riscv_load_store_stress_instr_stream,10
#    +boot_mode=m
#    +num_of_sub_program=0
#    +no_branch_jump=1
#    +illegal_instr_ratio=30
#    +report_stats=1
#  iterations: 24
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: vldst
#  description: >
#    Base ISA with all the ldst streams
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +boot_mode=m
#    +instr_cnt=5000
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_stress_instr_stream,4
#    +directed_instr_1=riscv_load_store_rand_instr_stream,4
#    +directed_instr_2=riscv_hazard_instr_stream,4
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,4
#    +directed_instr_4=riscv_load_store_rand_addr_instr_stream,4
#    +directed_instr_5=riscv_multi_page_load_store_instr_stream,4
#    +directed_instr_6=riscv_mem_region_stress_test,4
#    +directed_instr_7=riscv_amo_instr_stream,4
#    +directed_instr_8=riscv_vector_load_store_instr_stream,4
#    +boot_mode=m
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#
#- test: vjump
#  description: >
#    Base ISA, stress back-to-back jump instructions
#  gen_opts: >
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +instr_cnt=10000
#    +boot_mode=m
#    +num_of_sub_program=2
#    +directed_instr_1=riscv_jal_instr,12
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: vldstsmode
#  description: >
#    Base ISA with all the ldst streams
#  gen_opts: >
#    +boot_mode=s
#    +enable_interrupt=1
#    +instr_cnt=2500
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +enable_misaligned_load_store=1
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_stress_instr_stream,5
#    +directed_instr_1=riscv_load_store_rand_instr_stream,5
#    +directed_instr_2=riscv_hazard_instr_stream,5
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,5
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,5
#    +directed_instr_5=riscv_mem_region_stress_test,5
#    +directed_instr_6=riscv_fpu_arithmetic_stream,5
#    +report_stats=1
#  iterations: 15
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: vldstumode
#  description: >
#    Base ISA with all the ldst streams
#  gen_opts: >
#    +boot_mode=u
#    +enable_interrupt=1
#    +instr_cnt=2000
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +enable_misaligned_load_store=1
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_load_store_stress_instr_stream,5
#    +directed_instr_1=riscv_load_store_rand_instr_stream,5
#    +directed_instr_2=riscv_hazard_instr_stream,5
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,5
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,5
#    +directed_instr_5=riscv_mem_region_stress_test,5
#    +directed_instr_6=riscv_fpu_arithmetic_stream,5
#    +no_csr_instr=1
#    +report_stats=1
#  iterations: 15
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: vatomics
#  description: >
#    Base ISA with atomic streams
#  gen_opts: >
#    +instr_cnt=4500
#    +enable_interrupt=1
#    +boot_mode=s
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +num_of_sub_program=0
#    +directed_instr_0=riscv_lr_sc_instr_stream,15
#    +directed_instr_1=riscv_amo_instr_stream,15
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#- test: vadvanced
#  description: >
#    Base ISA with all the goodies
#  gen_opts: >
#    +instr_cnt=6000
#    +enable_interrupt=1
#    +enable_fp_extension=1
#    +enable_vector_extension=1
#    +vreg_init_method=RANDOM_VALUES_LOAD
#    +num_of_sub_program=0
#    +boot_mode=m
#    +directed_instr_0=riscv_load_store_rand_instr_stream,2
#    +directed_instr_1=riscv_loop_instr,1
#    +directed_instr_2=riscv_hazard_instr_stream,2
#    +directed_instr_3=riscv_load_store_hazard_instr_stream,2
#    +directed_instr_4=riscv_multi_page_load_store_instr_stream,2
#    +directed_instr_5=riscv_mem_region_stress_test,2
#    +directed_instr_6=riscv_jal_instr,1
#    +directed_instr_7=riscv_load_store_stress_instr_stream,2
#    +directed_instr_8=riscv_load_store_rand_addr_instr_stream,2
#    +directed_instr_9=riscv_lr_sc_instr_stream,1
#    +directed_instr_10=riscv_amo_instr_stream,1
#    +directed_instr_11=riscv_int_numeric_corner_stream,2
#    +report_stats=1
#  iterations: 30
#  gen_test: riscv_instr_base_test
#  rtl_test: core_base_test
#
#
