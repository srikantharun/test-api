//
// ***********************************************************************
// Unpublished work. Copyright 2021 Siemens
// For use only with Tessent tools
// ***********************************************************************
// File Type:       Tessent Cell Library 
// Generated by:    Tessent Libcomp 
// Tool Version:    2024.2 
// Tool Build Date:   Mon May 20 20:52:55 GMT 2024 
// ***********************************************************************
// Library Created : Local Time = Wed Oct  2 10:29:34 2024
//                          GMT = Wed Oct  2 10:29:34 2024

//

// 
//  User invoked Libcomp with following + arguments for Verilog translation.
//  +define+DWC_LPDDR5XPHY__LPDDR5_ENABLE=1 +define+DWC_LPDDR5XPHY_NUM_DBYTES_PER_CHANNEL=1 +define+DWC_LPDDR5XPHY_NUM_RANKS=2 +define+DWC_LPDDR5XPHY_NUM_TOP_SCAN_CHAINS=1368 +define+DWC_LPDDR5XPHY_NUM_CHANNELS=2 +define+DWC_LPDDR5XPHY_LPDDR5_ENABLED=1 +define+DWC_LPDDR5XPHY_PMU_DCCM_ADDR_RANGE=12:0 +define+DWC_LPDDR5XPHY_PMU_DBL_DCCM_BE_RANGE=9:0 +define+DWC_LPDDR5XPHY_PMU_DBL_DCCM_RANGE=77:0 +define+DWC_LPDDR5XPHY_PMU_ICCM0_BANK_WIDTH=78 +define+DWC_LPDDR5XPHY_PMU_ICCM0_ADR_RANGE=16:4 +define+DWC_LPDDR5XPHY_PMU_ICCM0_BANK_BYTE_SIZE=10 +define+DWC_LPDDR5XPHY_PMU_BR_BC_DATA_RANGE=63:0 +define+DWC_LPDDR5XPHY_PMU_BR_BC_IDX_RANGE=11:4 +define+DWC_LPDDR5XPHY_PMU_BR_PT_DATA_RANGE=7:0 +define+DWC_LPDDR5XPHY_PMU_BR_PT_RANGE=13:4 +define+DWC_LPDDR5XPHY_PMU_DBL_DCCM_BE_SIZE=10 +define+DWC_LPDDR5XPHY_NUM_DBYTES=4 +define+DWC_LPDDR5XPHY_EXISTS_DB0=1 +define+DWC_LPDDR5XPHY_EXISTS_AC0=1 +define+DWC_LPDDR5XPHY_EXISTS_DB1=1 +define+DWC_LPDDR5XPHY_DBYTE_DMI_ENABLED=1 +define+DWC_LPDDR5XPHY_NUM_CHANNELS_2=1 +define+DWC_LPDDR5XPHY_EXISTS_AC1=1 +define+DWC_LPDDR5XPHY_EXISTS_DB3=1 +define+DWC_LPDDR5XPHY_NUM_DBYTES_4=1 +define+DWC_LPDDR5XPHY_EXISTS_DB2=1 +define+DWC_LPDDR5XPHY_TECH__CDCBUF__DISABLE_BEHAVIORAL_VERILOG=1 +define+DWC_LPDDR5XPHY_CDCBUF_MODE01_SUPPORT=1 
// 
verilog_plus_args = "+define+DWC_LPDDR5XPHY__LPDDR5_ENABLE=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_NUM_DBYTES_PER_CHANNEL=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_NUM_RANKS=2";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_NUM_TOP_SCAN_CHAINS=1368";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_NUM_CHANNELS=2";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_LPDDR5_ENABLED=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_DCCM_ADDR_RANGE=12:0";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_DBL_DCCM_BE_RANGE=9:0";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_DBL_DCCM_RANGE=77:0";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_ICCM0_BANK_WIDTH=78";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_ICCM0_ADR_RANGE=16:4";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_ICCM0_BANK_BYTE_SIZE=10";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_BR_BC_DATA_RANGE=63:0";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_BR_BC_IDX_RANGE=11:4";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_BR_PT_DATA_RANGE=7:0";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_BR_PT_RANGE=13:4";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_PMU_DBL_DCCM_BE_SIZE=10";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_NUM_DBYTES=4";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_EXISTS_DB0=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_EXISTS_AC0=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_EXISTS_DB1=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_DBYTE_DMI_ENABLED=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_NUM_CHANNELS_2=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_EXISTS_AC1=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_EXISTS_DB3=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_NUM_DBYTES_4=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_EXISTS_DB2=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_TECH__CDCBUF__DISABLE_BEHAVIORAL_VERILOG=1";
verilog_plus_args = "+define+DWC_LPDDR5XPHY_CDCBUF_MODE01_SUPPORT=1";

library_format_version = 9;

array_delimiter = "[]";


model dwc_lpddr5xphy_top
  (dfi0_wrdata_mask_P0, dfi0_rddata_dbi_W0, dfi0_wrdata_mask_P1, dfi0_rddata_dbi_W1,
  dfi0_wrdata_mask_P2, dfi0_rddata_dbi_W2, dfi0_wrdata_mask_P3, dfi0_rddata_dbi_W3,
  dfi0_wck_write_P0, dfi0_wck_en_P0, dfi0_wck_cs_P0, dfi0_wck_toggle_P0,
  dfi0_wrdata_ecc_P0, dfi0_wck_write_P1, dfi0_wck_en_P1, dfi0_wck_cs_P1,
  dfi0_wck_toggle_P1, dfi0_wrdata_ecc_P1, dfi0_wck_write_P2, dfi0_wck_en_P2,
  dfi0_wck_cs_P2, dfi0_wck_toggle_P2, dfi0_wrdata_ecc_P2, dfi0_wck_write_P3,
  dfi0_wck_en_P3, dfi0_wck_cs_P3, dfi0_wck_toggle_P3, dfi0_wrdata_ecc_P3,
  dfi0_address_P0, dfi0_address_P1, dfi0_address_P2, dfi0_address_P3,
  dfi0_wrdata_P0, dfi0_wrdata_P1, dfi0_wrdata_P2, dfi0_wrdata_P3,
  dfi0_wrdata_cs_P0, dfi0_wrdata_cs_P1, dfi0_wrdata_cs_P2, dfi0_wrdata_cs_P3,
  dfi0_wrdata_en_P0, dfi0_wrdata_en_P1, dfi0_wrdata_en_P2, dfi0_wrdata_en_P3,
  dfi0_rddata_W0, dfi0_rddata_W1, dfi0_rddata_W2, dfi0_rddata_W3,
  dfi0_rddata_cs_P0, dfi0_rddata_cs_P1, dfi0_rddata_cs_P2, dfi0_rddata_cs_P3,
  dfi0_rddata_en_P0, dfi0_rddata_en_P1, dfi0_rddata_en_P2, dfi0_rddata_en_P3,
  dfi0_rddata_valid_W0, dfi0_rddata_valid_W1, dfi0_rddata_valid_W2, dfi0_rddata_valid_W3,
  dfi0_ctrlupd_ack, dfi0_ctrlupd_req, dfi0_ctrlupd_type, dfi0_phyupd_ack,
  dfi0_phyupd_req, dfi0_phyupd_type, dfi0_dram_clk_disable_P0, dfi0_dram_clk_disable_P1,
  dfi0_dram_clk_disable_P2, dfi0_dram_clk_disable_P3, dfi0_freq_fsp, dfi0_freq_ratio,
  dfi0_frequency, dfi0_init_complete, dfi0_init_start, dfi0_phymstr_ack,
  dfi0_phymstr_cs_state, dfi0_phymstr_req, dfi0_phymstr_state_sel, dfi0_phymstr_type,
  dfi0_cke_P0, dfi0_cke_P1, dfi0_cke_P2, dfi0_cke_P3,
  dfi0_cs_P0, dfi0_cs_P1, dfi0_cs_P2, dfi0_cs_P3,
  dfi0_lp_ctrl_ack, dfi0_lp_ctrl_req, dfi0_lp_ctrl_wakeup, dfi0_lp_data_ack,
  dfi0_lp_data_req, dfi0_lp_data_wakeup, dfi0_error, dfi0_error_info,
  dfi_reset_n, dfi1_wck_write_P0, dfi1_wck_en_P0, dfi1_wck_cs_P0,
  dfi1_wck_toggle_P0, dfi1_wrdata_ecc_P0, dfi1_wck_write_P1, dfi1_wck_en_P1,
  dfi1_wck_cs_P1, dfi1_wck_toggle_P1, dfi1_wrdata_ecc_P1, dfi1_wck_write_P2,
  dfi1_wck_en_P2, dfi1_wck_cs_P2, dfi1_wck_toggle_P2, dfi1_wrdata_ecc_P2,
  dfi1_wck_write_P3, dfi1_wck_en_P3, dfi1_wck_cs_P3, dfi1_wck_toggle_P3,
  dfi1_wrdata_ecc_P3, dfi1_address_P0, dfi1_address_P1, dfi1_address_P2,
  dfi1_address_P3, dfi1_wrdata_mask_P0, dfi1_rddata_dbi_W0, dfi1_wrdata_mask_P1,
  dfi1_rddata_dbi_W1, dfi1_wrdata_mask_P2, dfi1_rddata_dbi_W2, dfi1_wrdata_mask_P3,
  dfi1_rddata_dbi_W3, dfi1_wrdata_P0, dfi1_wrdata_P1, dfi1_wrdata_P2,
  dfi1_wrdata_P3, dfi1_wrdata_cs_P0, dfi1_wrdata_cs_P1, dfi1_wrdata_cs_P2,
  dfi1_wrdata_cs_P3, dfi1_wrdata_en_P0, dfi1_wrdata_en_P1, dfi1_wrdata_en_P2,
  dfi1_wrdata_en_P3, dfi1_rddata_W0, dfi1_rddata_W1, dfi1_rddata_W2,
  dfi1_rddata_W3, dfi1_rddata_cs_P0, dfi1_rddata_cs_P1, dfi1_rddata_cs_P2,
  dfi1_rddata_cs_P3, dfi1_rddata_en_P0, dfi1_rddata_en_P1, dfi1_rddata_en_P2,
  dfi1_rddata_en_P3, dfi1_rddata_valid_W0, dfi1_rddata_valid_W1, dfi1_rddata_valid_W2,
  dfi1_rddata_valid_W3, dfi1_ctrlupd_ack, dfi1_ctrlupd_req, dfi1_ctrlupd_type,
  dfi1_phyupd_ack, dfi1_phyupd_req, dfi1_phyupd_type, dfi1_dram_clk_disable_P0,
  dfi1_dram_clk_disable_P1, dfi1_dram_clk_disable_P2, dfi1_dram_clk_disable_P3, dfi1_freq_fsp,
  dfi1_freq_ratio, dfi1_frequency, dfi1_init_complete, dfi1_init_start,
  dfi1_phymstr_ack, dfi1_phymstr_cs_state, dfi1_phymstr_req, dfi1_phymstr_state_sel,
  dfi1_phymstr_type, dfi1_cke_P0, dfi1_cke_P1, dfi1_cke_P2,
  dfi1_cke_P3, dfi1_cs_P0, dfi1_cs_P1, dfi1_cs_P2,
  dfi1_cs_P3, dfi1_lp_ctrl_ack, dfi1_lp_ctrl_req, dfi1_lp_ctrl_wakeup,
  dfi1_lp_data_ack, dfi1_lp_data_req, dfi1_lp_data_wakeup, dfi1_error,
  dfi1_error_info, dwc_lpddr5xphy0_snoop_en_P0, dwc_lpddr5xphy1_snoop_en_P0, dwc_lpddr5xphy0_snoop_en_P1,
  dwc_lpddr5xphy1_snoop_en_P1, dwc_lpddr5xphy0_snoop_en_P2, dwc_lpddr5xphy1_snoop_en_P2, dwc_lpddr5xphy0_snoop_en_P3,
  dwc_lpddr5xphy1_snoop_en_P3, Reset, Reset_async, DfiClk,
  PllRefClk, PllBypClk, BurnIn, dwc_lpddr5xphy0_snoop_osc_running,
  dwc_lpddr5xphy1_snoop_osc_running, dwc_lpddr5xphy_dto, dwc_lpddr5xphy_pll_lock, WSI,
  TDRCLK, WRSTN, DdrPhyCsrCmdTdrShiftEn, DdrPhyCsrCmdTdrCaptureEn,
  DdrPhyCsrCmdTdrUpdateEn, DdrPhyCsrCmdTdr_Tdo, DdrPhyCsrRdDataTdrShiftEn, DdrPhyCsrRdDataTdrCaptureEn,
  DdrPhyCsrRdDataTdrUpdateEn, DdrPhyCsrRdDataTdr_Tdo, PhyInt_n, PhyInt_fault,
  Iddq_mode, scan_shift, scan_si, scan_so,
  scan_mode, scan_ucclk_mode, scan_UcClk, scan_clk,
  scan_occ_bypass, scan_occ_reset, scan_asst_mode, scan_shift_cg,
  scan_shift_async, scan_DlyTestClk, haddr_ahb, hburst_ahb,
  hmastlock_ahb, hprot_ahb, hsize_ahb, htrans_ahb,
  hwdata_ahb, hwrite_ahb, hclk_ahb, hresetn_ahb,
  hrdata_ahb, hresp_ahb, hreadyout_ahb, APBCLK,
  PADDR_APB, PWRITE_APB, PRESETn_APB, PSELx_APB,
  PENABLE_APB, PWDATA_APB, PSTRB_APB, PPROT_APB,
  PREADY_APB, PRDATA_APB, PRDATA_PAR_APB, PSLVERR_APB,
  PPROT_PIN, iccm0_bank0_clk, iccm0_data_dout0, iccm0_data_din0,
  iccm0_data_addr0, iccm0_data_cen0, iccm0_data_wen0, iccm0_data_wem0,
  iccm0_bank1_clk, iccm0_data_dout1, iccm0_data_din1, iccm0_data_addr1,
  iccm0_data_cen1, iccm0_data_wen1, iccm0_data_wem1, clk_dccm_bank0_lo,
  clk_dccm_bank0_hi, dccm_bank0_cs_lo, dccm_bank0_cs_hi, dccm_bank0_addr_lo,
  dccm_bank0_addr_hi, dccm_bank0_we_lo, dccm_bank0_we_hi, dccm_bank0_wem,
  dccm_bank0_din, dccm_bank0_dout, clk_dccm_bank1_lo, clk_dccm_bank1_hi,
  dccm_bank1_cs_lo, dccm_bank1_cs_hi, dccm_bank1_addr_lo, dccm_bank1_addr_hi,
  dccm_bank1_we_lo, dccm_bank1_we_hi, dccm_bank1_wem, dccm_bank1_din,
  dccm_bank1_dout, bc_din0, bc_addr0, bc_me0,
  bc_we0, bc_wem0, bc_dout0, gs_din0,
  gs_addr0, gs_me0, gs_we0, gs_wem0,
  gs_dout0, bc_ram0_clk, gs_ram0_clk, bc_din1,
  bc_addr1, bc_me1, bc_we1, bc_wem1,
  bc_dout1, gs_din1, gs_addr1, gs_me1,
  gs_we1, gs_wem1, gs_dout1, bc_ram1_clk,
  gs_ram1_clk, acsm_data_dout, acsm_data_din, acsm_data_addr,
  acsm_data_ce, acsm_data_we, acsm_data_clk, pie_data_dout,
  pie_data_din, pie_data_addr, pie_data_ce, pie_data_we,
  pie_data_clk, dwc_lpddr5xphy_pmu_busy, TxBypassMode_MEMRESET_L, TxBypassData_MEMRESET_L,
  RxBypassPadEn_MEMRESET_L, RxBypassDataPad_MEMRESET_L, TxBypassData_A, TxBypassData_CK0_T,
  TxBypassData_CK0_C, TxBypassData_CK1_T, TxBypassData_CK1_C, TxBypassMode_A,
  TxBypassMode_CK0_T, TxBypassMode_CK0_C, TxBypassMode_CK1_T, TxBypassMode_CK1_C,
  TxBypassOE_A, TxBypassOE_CK0_T, TxBypassOE_CK0_C, TxBypassOE_CK1_T,
  TxBypassOE_CK1_C, RxBypassPadEn_A, RxBypassPadEn_CK0, RxBypassPadEn_CK1,
  RxBypassRcvEn_A, RxBypassRcvEn_CK0, RxBypassRcvEn_CK1, TxBypassMode_B0_D0,
  TxBypassMode_B0_D1, TxBypassMode_B0_D2, TxBypassMode_B0_D3, TxBypassMode_B0_D4,
  TxBypassMode_B0_D5, TxBypassMode_B0_D6, TxBypassMode_B0_D7, TxBypassMode_B0_D8,
  TxBypassMode_B0_D9, TxBypassMode_B0_D10, TxBypassMode_B0_D11, TxBypassMode_B0_D12,
  TxBypassMode_B1_D0, TxBypassMode_B1_D1, TxBypassMode_B1_D2, TxBypassMode_B1_D3,
  TxBypassMode_B1_D4, TxBypassMode_B1_D5, TxBypassMode_B1_D6, TxBypassMode_B1_D7,
  TxBypassMode_B1_D8, TxBypassMode_B1_D9, TxBypassMode_B1_D10, TxBypassMode_B1_D11,
  TxBypassMode_B1_D12, TxBypassMode_B2_D0, TxBypassMode_B2_D1, TxBypassMode_B2_D2,
  TxBypassMode_B2_D3, TxBypassMode_B2_D4, TxBypassMode_B2_D5, TxBypassMode_B2_D6,
  TxBypassMode_B2_D7, TxBypassMode_B2_D8, TxBypassMode_B2_D9, TxBypassMode_B2_D10,
  TxBypassMode_B2_D11, TxBypassMode_B2_D12, TxBypassMode_B3_D0, TxBypassMode_B3_D1,
  TxBypassMode_B3_D2, TxBypassMode_B3_D3, TxBypassMode_B3_D4, TxBypassMode_B3_D5,
  TxBypassMode_B3_D6, TxBypassMode_B3_D7, TxBypassMode_B3_D8, TxBypassMode_B3_D9,
  TxBypassMode_B3_D10, TxBypassMode_B3_D11, TxBypassMode_B3_D12, TxBypassOE_B0_D0,
  TxBypassOE_B0_D1, TxBypassOE_B0_D2, TxBypassOE_B0_D3, TxBypassOE_B0_D4,
  TxBypassOE_B0_D5, TxBypassOE_B0_D6, TxBypassOE_B0_D7, TxBypassOE_B0_D8,
  TxBypassOE_B0_D9, TxBypassOE_B0_D10, TxBypassOE_B0_D11, TxBypassOE_B0_D12,
  TxBypassOE_B1_D0, TxBypassOE_B1_D1, TxBypassOE_B1_D2, TxBypassOE_B1_D3,
  TxBypassOE_B1_D4, TxBypassOE_B1_D5, TxBypassOE_B1_D6, TxBypassOE_B1_D7,
  TxBypassOE_B1_D8, TxBypassOE_B1_D9, TxBypassOE_B1_D10, TxBypassOE_B1_D11,
  TxBypassOE_B1_D12, TxBypassOE_B2_D0, TxBypassOE_B2_D1, TxBypassOE_B2_D2,
  TxBypassOE_B2_D3, TxBypassOE_B2_D4, TxBypassOE_B2_D5, TxBypassOE_B2_D6,
  TxBypassOE_B2_D7, TxBypassOE_B2_D8, TxBypassOE_B2_D9, TxBypassOE_B2_D10,
  TxBypassOE_B2_D11, TxBypassOE_B2_D12, TxBypassOE_B3_D0, TxBypassOE_B3_D1,
  TxBypassOE_B3_D2, TxBypassOE_B3_D3, TxBypassOE_B3_D4, TxBypassOE_B3_D5,
  TxBypassOE_B3_D6, TxBypassOE_B3_D7, TxBypassOE_B3_D8, TxBypassOE_B3_D9,
  TxBypassOE_B3_D10, TxBypassOE_B3_D11, TxBypassOE_B3_D12, TxBypassData_B0_D0,
  TxBypassData_B0_D1, TxBypassData_B0_D2, TxBypassData_B0_D3, TxBypassData_B0_D4,
  TxBypassData_B0_D5, TxBypassData_B0_D6, TxBypassData_B0_D7, TxBypassData_B0_D8,
  TxBypassData_B0_D9, TxBypassData_B0_D10, TxBypassData_B0_D11, TxBypassData_B0_D12,
  TxBypassData_B1_D0, TxBypassData_B1_D1, TxBypassData_B1_D2, TxBypassData_B1_D3,
  TxBypassData_B1_D4, TxBypassData_B1_D5, TxBypassData_B1_D6, TxBypassData_B1_D7,
  TxBypassData_B1_D8, TxBypassData_B1_D9, TxBypassData_B1_D10, TxBypassData_B1_D11,
  TxBypassData_B1_D12, TxBypassData_B2_D0, TxBypassData_B2_D1, TxBypassData_B2_D2,
  TxBypassData_B2_D3, TxBypassData_B2_D4, TxBypassData_B2_D5, TxBypassData_B2_D6,
  TxBypassData_B2_D7, TxBypassData_B2_D8, TxBypassData_B2_D9, TxBypassData_B2_D10,
  TxBypassData_B2_D11, TxBypassData_B2_D12, TxBypassData_B3_D0, TxBypassData_B3_D1,
  TxBypassData_B3_D2, TxBypassData_B3_D3, TxBypassData_B3_D4, TxBypassData_B3_D5,
  TxBypassData_B3_D6, TxBypassData_B3_D7, TxBypassData_B3_D8, TxBypassData_B3_D9,
  TxBypassData_B3_D10, TxBypassData_B3_D11, TxBypassData_B3_D12, RxBypassRcvEn_B0_D0,
  RxBypassRcvEn_B0_D1, RxBypassRcvEn_B0_D2, RxBypassRcvEn_B0_D3, RxBypassRcvEn_B0_D4,
  RxBypassRcvEn_B0_D5, RxBypassRcvEn_B0_D6, RxBypassRcvEn_B0_D7, RxBypassRcvEn_B0_D8,
  RxBypassRcvEn_B0_D9, RxBypassRcvEn_B0_D10, RxBypassRcvEn_B0_D11, RxBypassRcvEn_B0_D12,
  RxBypassRcvEn_B1_D0, RxBypassRcvEn_B1_D1, RxBypassRcvEn_B1_D2, RxBypassRcvEn_B1_D3,
  RxBypassRcvEn_B1_D4, RxBypassRcvEn_B1_D5, RxBypassRcvEn_B1_D6, RxBypassRcvEn_B1_D7,
  RxBypassRcvEn_B1_D8, RxBypassRcvEn_B1_D9, RxBypassRcvEn_B1_D10, RxBypassRcvEn_B1_D11,
  RxBypassRcvEn_B1_D12, RxBypassRcvEn_B2_D0, RxBypassRcvEn_B2_D1, RxBypassRcvEn_B2_D2,
  RxBypassRcvEn_B2_D3, RxBypassRcvEn_B2_D4, RxBypassRcvEn_B2_D5, RxBypassRcvEn_B2_D6,
  RxBypassRcvEn_B2_D7, RxBypassRcvEn_B2_D8, RxBypassRcvEn_B2_D9, RxBypassRcvEn_B2_D10,
  RxBypassRcvEn_B2_D11, RxBypassRcvEn_B2_D12, RxBypassRcvEn_B3_D0, RxBypassRcvEn_B3_D1,
  RxBypassRcvEn_B3_D2, RxBypassRcvEn_B3_D3, RxBypassRcvEn_B3_D4, RxBypassRcvEn_B3_D5,
  RxBypassRcvEn_B3_D6, RxBypassRcvEn_B3_D7, RxBypassRcvEn_B3_D8, RxBypassRcvEn_B3_D9,
  RxBypassRcvEn_B3_D10, RxBypassRcvEn_B3_D11, RxBypassRcvEn_B3_D12, RxBypassPadEn_B0_D0,
  RxBypassPadEn_B0_D1, RxBypassPadEn_B0_D2, RxBypassPadEn_B0_D3, RxBypassPadEn_B0_D4,
  RxBypassPadEn_B0_D5, RxBypassPadEn_B0_D6, RxBypassPadEn_B0_D7, RxBypassPadEn_B0_D8,
  RxBypassPadEn_B0_D9, RxBypassPadEn_B0_D10, RxBypassPadEn_B0_D11, RxBypassPadEn_B0_D12,
  RxBypassPadEn_B1_D0, RxBypassPadEn_B1_D1, RxBypassPadEn_B1_D2, RxBypassPadEn_B1_D3,
  RxBypassPadEn_B1_D4, RxBypassPadEn_B1_D5, RxBypassPadEn_B1_D6, RxBypassPadEn_B1_D7,
  RxBypassPadEn_B1_D8, RxBypassPadEn_B1_D9, RxBypassPadEn_B1_D10, RxBypassPadEn_B1_D11,
  RxBypassPadEn_B1_D12, RxBypassPadEn_B2_D0, RxBypassPadEn_B2_D1, RxBypassPadEn_B2_D2,
  RxBypassPadEn_B2_D3, RxBypassPadEn_B2_D4, RxBypassPadEn_B2_D5, RxBypassPadEn_B2_D6,
  RxBypassPadEn_B2_D7, RxBypassPadEn_B2_D8, RxBypassPadEn_B2_D9, RxBypassPadEn_B2_D10,
  RxBypassPadEn_B2_D11, RxBypassPadEn_B2_D12, RxBypassPadEn_B3_D0, RxBypassPadEn_B3_D1,
  RxBypassPadEn_B3_D2, RxBypassPadEn_B3_D3, RxBypassPadEn_B3_D4, RxBypassPadEn_B3_D5,
  RxBypassPadEn_B3_D6, RxBypassPadEn_B3_D7, RxBypassPadEn_B3_D8, RxBypassPadEn_B3_D9,
  RxBypassPadEn_B3_D10, RxBypassPadEn_B3_D11, RxBypassPadEn_B3_D12, RxBypassDataPad_B0_D0,
  RxBypassDataPad_B0_D1, RxBypassDataPad_B0_D2, RxBypassDataPad_B0_D3, RxBypassDataPad_B0_D4,
  RxBypassDataPad_B0_D5, RxBypassDataPad_B0_D6, RxBypassDataPad_B0_D7, RxBypassDataPad_B0_D8,
  RxBypassDataPad_B0_D9, RxBypassDataPad_B0_D10, RxBypassDataPad_B0_D11, RxBypassDataPad_B0_D12,
  RxBypassDataPad_B1_D0, RxBypassDataPad_B1_D1, RxBypassDataPad_B1_D2, RxBypassDataPad_B1_D3,
  RxBypassDataPad_B1_D4, RxBypassDataPad_B1_D5, RxBypassDataPad_B1_D6, RxBypassDataPad_B1_D7,
  RxBypassDataPad_B1_D8, RxBypassDataPad_B1_D9, RxBypassDataPad_B1_D10, RxBypassDataPad_B1_D11,
  RxBypassDataPad_B1_D12, RxBypassDataPad_B2_D0, RxBypassDataPad_B2_D1, RxBypassDataPad_B2_D2,
  RxBypassDataPad_B2_D3, RxBypassDataPad_B2_D4, RxBypassDataPad_B2_D5, RxBypassDataPad_B2_D6,
  RxBypassDataPad_B2_D7, RxBypassDataPad_B2_D8, RxBypassDataPad_B2_D9, RxBypassDataPad_B2_D10,
  RxBypassDataPad_B2_D11, RxBypassDataPad_B2_D12, RxBypassDataPad_B3_D0, RxBypassDataPad_B3_D1,
  RxBypassDataPad_B3_D2, RxBypassDataPad_B3_D3, RxBypassDataPad_B3_D4, RxBypassDataPad_B3_D5,
  RxBypassDataPad_B3_D6, RxBypassDataPad_B3_D7, RxBypassDataPad_B3_D8, RxBypassDataPad_B3_D9,
  RxBypassDataPad_B3_D10, RxBypassDataPad_B3_D11, RxBypassDataPad_B3_D12, RxBypassDataRcv_B0_D0,
  RxBypassDataRcv_B0_D1, RxBypassDataRcv_B0_D2, RxBypassDataRcv_B0_D3, RxBypassDataRcv_B0_D4,
  RxBypassDataRcv_B0_D5, RxBypassDataRcv_B0_D6, RxBypassDataRcv_B0_D7, RxBypassDataRcv_B0_D8,
  RxBypassDataRcv_B0_D9, RxBypassDataRcv_B0_D10, RxBypassDataRcv_B0_D11, RxBypassDataRcv_B0_D12,
  RxBypassDataRcv_B1_D0, RxBypassDataRcv_B1_D1, RxBypassDataRcv_B1_D2, RxBypassDataRcv_B1_D3,
  RxBypassDataRcv_B1_D4, RxBypassDataRcv_B1_D5, RxBypassDataRcv_B1_D6, RxBypassDataRcv_B1_D7,
  RxBypassDataRcv_B1_D8, RxBypassDataRcv_B1_D9, RxBypassDataRcv_B1_D10, RxBypassDataRcv_B1_D11,
  RxBypassDataRcv_B1_D12, RxBypassDataRcv_B2_D0, RxBypassDataRcv_B2_D1, RxBypassDataRcv_B2_D2,
  RxBypassDataRcv_B2_D3, RxBypassDataRcv_B2_D4, RxBypassDataRcv_B2_D5, RxBypassDataRcv_B2_D6,
  RxBypassDataRcv_B2_D7, RxBypassDataRcv_B2_D8, RxBypassDataRcv_B2_D9, RxBypassDataRcv_B2_D10,
  RxBypassDataRcv_B2_D11, RxBypassDataRcv_B2_D12, RxBypassDataRcv_B3_D0, RxBypassDataRcv_B3_D1,
  RxBypassDataRcv_B3_D2, RxBypassDataRcv_B3_D3, RxBypassDataRcv_B3_D4, RxBypassDataRcv_B3_D5,
  RxBypassDataRcv_B3_D6, RxBypassDataRcv_B3_D7, RxBypassDataRcv_B3_D8, RxBypassDataRcv_B3_D9,
  RxBypassDataRcv_B3_D10, RxBypassDataRcv_B3_D11, RxBypassDataRcv_B3_D12, RxBypassDataRcv_A0,
  RxBypassDataRcv_A1, RxBypassDataRcv_A2, RxBypassDataRcv_A3, RxBypassDataRcv_A4,
  RxBypassDataRcv_A5, RxBypassDataRcv_A6, RxBypassDataRcv_A7, RxBypassDataRcv_A8,
  RxBypassDataRcv_A9, RxBypassDataRcv_A10, RxBypassDataRcv_A11, RxBypassDataRcv_A12,
  RxBypassDataRcv_A13, RxBypassDataRcv_A14, RxBypassDataRcv_A15, RxBypassDataRcv_A16,
  RxBypassDataRcv_A17, RxBypassDataRcv_A18, RxBypassDataRcv_A19, RxBypassDataPad_A,
  RxBypassDataRcv_CK0_T, RxBypassDataRcv_CK0_C, RxBypassDataPad_CK0_T, RxBypassDataPad_CK0_C,
  RxBypassDataRcv_CK1_T, RxBypassDataRcv_CK1_C, RxBypassDataPad_CK1_T, RxBypassDataPad_CK1_C,
  BP_A, BP_B0_D, BP_B1_D, BP_B2_D,
  BP_B3_D, BP_CK0_T, BP_CK0_C, BP_CK1_T,
  BP_CK1_C, VIO_TIEHI, BP_PWROK, BP_MEMRESET_L,
  BP_ATO, BP_ATO_PLL, BP_ZN)
(
  model_source = verilog_module;
  input (dfi0_wrdata_mask_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_mask_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_mask_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_mask_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_write_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_en_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_toggle_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_ecc_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_write_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_en_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_toggle_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_ecc_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_write_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_en_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_toggle_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_ecc_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_write_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_en_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wck_toggle_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_ecc_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_address_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_address_P1) (array = 5 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_address_P2) (array = 5 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_address_P3) (array = 5 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_P0) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_P1) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_P2) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_P3) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_en_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_en_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_en_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_wrdata_en_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_en_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_en_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_en_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_rddata_en_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_ctrlupd_req) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_ctrlupd_type) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_phyupd_ack) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_dram_clk_disable_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_dram_clk_disable_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_dram_clk_disable_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_dram_clk_disable_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_freq_fsp) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_freq_ratio) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_frequency) (array = 4 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_init_start) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_phymstr_ack) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cke_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cke_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cke_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cke_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_lp_ctrl_req) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_lp_ctrl_wakeup) (array = 4 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_lp_data_req) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi0_lp_data_wakeup) (array = 4 : 0; unused; no_fault = sa0 sa1;)
  input (dfi_reset_n) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_write_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_en_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_toggle_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_ecc_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_write_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_en_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_toggle_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_ecc_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_write_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_en_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_toggle_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_ecc_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_write_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_en_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wck_toggle_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_ecc_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_address_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_address_P1) (array = 5 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_address_P2) (array = 5 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_address_P3) (array = 5 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_mask_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_mask_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_mask_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_mask_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_P0) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_P1) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_P2) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_P3) (array = 15 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_en_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_en_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_en_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_wrdata_en_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_en_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_en_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_en_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_rddata_en_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_ctrlupd_req) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_ctrlupd_type) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_phyupd_ack) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_dram_clk_disable_P0) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_dram_clk_disable_P1) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_dram_clk_disable_P2) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_dram_clk_disable_P3) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_freq_fsp) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_freq_ratio) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_frequency) (array = 4 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_init_start) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_phymstr_ack) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cke_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cke_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cke_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cke_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cs_P0) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cs_P1) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cs_P2) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_cs_P3) (array = 1 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_lp_ctrl_req) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_lp_ctrl_wakeup) (array = 4 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_lp_data_req) (array = 0 : 0; unused; no_fault = sa0 sa1;)
  input (dfi1_lp_data_wakeup) (array = 4 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy0_snoop_en_P0) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy1_snoop_en_P0) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy0_snoop_en_P1) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy1_snoop_en_P1) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy0_snoop_en_P2) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy1_snoop_en_P2) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy0_snoop_en_P3) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy1_snoop_en_P3) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (Reset) (unused; no_fault = sa0 sa1;)
  input (Reset_async) (unused; no_fault = sa0 sa1;)
  input (DfiClk) (unused; no_fault = sa0 sa1;)
  input (PllRefClk) (unused; no_fault = sa0 sa1;)
  input (PllBypClk) (unused; no_fault = sa0 sa1;)
  input (BurnIn) (unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy0_snoop_osc_running) (unused; no_fault = sa0 sa1;)
  input (dwc_lpddr5xphy1_snoop_osc_running) (unused; no_fault = sa0 sa1;)
  input (WSI) (unused; no_fault = sa0 sa1;)
  input (TDRCLK) (unused; no_fault = sa0 sa1;)
  input (WRSTN) (unused; no_fault = sa0 sa1;)
  input (DdrPhyCsrCmdTdrShiftEn) (unused; no_fault = sa0 sa1;)
  input (DdrPhyCsrCmdTdrCaptureEn) (unused; no_fault = sa0 sa1;)
  input (DdrPhyCsrCmdTdrUpdateEn) (unused; no_fault = sa0 sa1;)
  input (DdrPhyCsrRdDataTdrShiftEn) (unused; no_fault = sa0 sa1;)
  input (DdrPhyCsrRdDataTdrCaptureEn) (unused; no_fault = sa0 sa1;)
  input (DdrPhyCsrRdDataTdrUpdateEn) (unused; no_fault = sa0 sa1;)
  input (Iddq_mode) (unused; no_fault = sa0 sa1;)
  input (scan_shift) (array = 5 : 0; unused; no_fault = sa0 sa1;)
  input (scan_si) (array = 1367 : 0; unused; no_fault = sa0 sa1;)
  input (scan_mode) (unused; no_fault = sa0 sa1;)
  input (scan_ucclk_mode) (unused; no_fault = sa0 sa1;)
  input (scan_UcClk) (unused; no_fault = sa0 sa1;)
  input (scan_clk) (unused; no_fault = sa0 sa1;)
  input (scan_occ_bypass) (unused; no_fault = sa0 sa1;)
  input (scan_occ_reset) (unused; no_fault = sa0 sa1;)
  input (scan_asst_mode) (unused; no_fault = sa0 sa1;)
  input (scan_shift_cg) (unused; no_fault = sa0 sa1;)
  input (scan_shift_async) (unused; no_fault = sa0 sa1;)
  input (scan_DlyTestClk) (unused; no_fault = sa0 sa1;)
  input (hrdata_ahb) (array = 31 : 0; unused; no_fault = sa0 sa1;)
  input (hresp_ahb) (unused; no_fault = sa0 sa1;)
  input (hreadyout_ahb) (unused; no_fault = sa0 sa1;)
  input (APBCLK) (unused; no_fault = sa0 sa1;)
  input (PADDR_APB) (array = 31 : 0; unused; no_fault = sa0 sa1;)
  input (PWRITE_APB) (unused; no_fault = sa0 sa1;)
  input (PRESETn_APB) (unused; no_fault = sa0 sa1;)
  input (PSELx_APB) (unused; no_fault = sa0 sa1;)
  input (PENABLE_APB) (unused; no_fault = sa0 sa1;)
  input (PWDATA_APB) (array = 31 : 0; unused; no_fault = sa0 sa1;)
  input (PSTRB_APB) (array = 3 : 0; unused; no_fault = sa0 sa1;)
  input (PPROT_APB) (array = 2 : 0; unused; no_fault = sa0 sa1;)
  input (PPROT_PIN) (array = 2 : 0; unused; no_fault = sa0 sa1;)
  input (iccm0_data_dout0) (array = 77 : 0; unused; no_fault = sa0 sa1;)
  input (iccm0_data_dout1) (array = 77 : 0; unused; no_fault = sa0 sa1;)
  input (dccm_bank0_dout) (array = 77 : 0; unused; no_fault = sa0 sa1;)
  input (dccm_bank1_dout) (array = 77 : 0; unused; no_fault = sa0 sa1;)
  input (bc_dout0) (array = 63 : 0; unused; no_fault = sa0 sa1;)
  input (gs_dout0) (array = 7 : 0; unused; no_fault = sa0 sa1;)
  input (bc_dout1) (array = 63 : 0; unused; no_fault = sa0 sa1;)
  input (gs_dout1) (array = 7 : 0; unused; no_fault = sa0 sa1;)
  input (acsm_data_dout) (array = 71 : 0; unused; no_fault = sa0 sa1;)
  input (pie_data_dout) (array = 55 : 0; unused; no_fault = sa0 sa1;)
  input (TxBypassMode_MEMRESET_L) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_MEMRESET_L) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_MEMRESET_L) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_A) (array = 19 : 0; unused; no_fault = sa0 sa1;)
  input (TxBypassData_CK0_T) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_CK0_C) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_CK1_T) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_CK1_C) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_A) (array = 19 : 0; unused; no_fault = sa0 sa1;)
  input (TxBypassMode_CK0_T) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_CK0_C) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_CK1_T) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_CK1_C) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_A) (array = 19 : 0; unused; no_fault = sa0 sa1;)
  input (TxBypassOE_CK0_T) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_CK0_C) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_CK1_T) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_CK1_C) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_A) (array = 19 : 0; unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_CK0) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_CK1) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_A) (array = 19 : 0; unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_CK0) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_CK1) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B0_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B1_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B2_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassMode_B3_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B0_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B1_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B2_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassOE_B3_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B0_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B1_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B2_D12) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D0) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D1) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D2) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D3) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D4) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D5) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D6) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D7) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D8) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D9) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D10) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D11) (unused; no_fault = sa0 sa1;)
  input (TxBypassData_B3_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B0_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B1_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B2_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassRcvEn_B3_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B0_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B1_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B2_D12) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D0) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D1) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D2) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D3) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D4) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D5) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D6) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D7) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D8) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D9) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D10) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D11) (unused; no_fault = sa0 sa1;)
  input (RxBypassPadEn_B3_D12) (unused; no_fault = sa0 sa1;)
  input (BP_PWROK) (unused; no_fault = sa0 sa1;)
  inout (BP_A) (array = 19 : 0; )
  inout (BP_B0_D) (array = 12 : 0; )
  inout (BP_B1_D) (array = 12 : 0; )
  inout (BP_B2_D) (array = 12 : 0; )
  inout (BP_B3_D) (array = 12 : 0; )
  inout (BP_CK0_T) ( )
  inout (BP_CK0_C) ( )
  inout (BP_CK1_T) ( )
  inout (BP_CK1_C) ( )
   mode(                                                   
     inout (BP_A[0])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[0]) (pad_from_pad;    )    
     input  (TxBypassData_A[0])    (pad_to_pad;      )    
     input  (TxBypassOE_A[0])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[1])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[1]) (pad_from_pad;    )    
     input  (TxBypassData_A[1])    (pad_to_pad;      )    
     input  (TxBypassOE_A[1])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[2])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[2]) (pad_from_pad;    )    
     input  (TxBypassData_A[2])    (pad_to_pad;      )    
     input  (TxBypassOE_A[2])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[3])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[3]) (pad_from_pad;    )    
     input  (TxBypassData_A[3])    (pad_to_pad;      )    
     input  (TxBypassOE_A[3])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[4])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[4]) (pad_from_pad;    )    
     input  (TxBypassData_A[4])    (pad_to_pad;      )    
     input  (TxBypassOE_A[4])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[5])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[5]) (pad_from_pad;    )    
     input  (TxBypassData_A[5])    (pad_to_pad;      )    
     input  (TxBypassOE_A[5])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[6])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[6]) (pad_from_pad;    )    
     input  (TxBypassData_A[6])    (pad_to_pad;      )    
     input  (TxBypassOE_A[6])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[7])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[7]) (pad_from_pad;    )    
     input  (TxBypassData_A[7])    (pad_to_pad;      )    
     input  (TxBypassOE_A[7])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[8])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[8]) (pad_from_pad;    )    
     input  (TxBypassData_A[8])    (pad_to_pad;      )    
     input  (TxBypassOE_A[8])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[9])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[9]) (pad_from_pad;    )    
     input  (TxBypassData_A[9])    (pad_to_pad;      )    
     input  (TxBypassOE_A[9])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[10])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[10]) (pad_from_pad;    )    
     input  (TxBypassData_A[10])    (pad_to_pad;      )    
     input  (TxBypassOE_A[10])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[11])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[11]) (pad_from_pad;    )    
     input  (TxBypassData_A[11])    (pad_to_pad;      )    
     input  (TxBypassOE_A[11])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[12])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[12]) (pad_from_pad;    )    
     input  (TxBypassData_A[12])    (pad_to_pad;      )    
     input  (TxBypassOE_A[12])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[13])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[13]) (pad_from_pad;    )    
     input  (TxBypassData_A[13])    (pad_to_pad;      )    
     input  (TxBypassOE_A[13])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[14])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[14]) (pad_from_pad;    )    
     input  (TxBypassData_A[14])    (pad_to_pad;      )    
     input  (TxBypassOE_A[14])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[15])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[15]) (pad_from_pad;    )    
     input  (TxBypassData_A[15])    (pad_to_pad;      )    
     input  (TxBypassOE_A[15])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[16])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[16]) (pad_from_pad;    )    
     input  (TxBypassData_A[16])    (pad_to_pad;      )    
     input  (TxBypassOE_A[16])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[17])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[17]) (pad_from_pad;    )    
     input  (TxBypassData_A[17])    (pad_to_pad;      )    
     input  (TxBypassOE_A[17])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[18])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[18]) (pad_from_pad;    )    
     input  (TxBypassData_A[18])    (pad_to_pad;      )    
     input  (TxBypassOE_A[18])      (pad_enable_high; )    
   )                                                        
   mode(                                                   
     inout (BP_A[19])             (pad_pad_io;      )    
     output (RxBypassDataPad_A[19]) (pad_from_pad;    )    
     input  (TxBypassData_A[19])    (pad_to_pad;      )    
     input  (TxBypassOE_A[19])      (pad_enable_high; )    
   )                                                        


   mode(                                                   
     inout (BP_B0_D[0])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D0) (pad_from_pad;    )    
     input  (TxBypassData_B0_D0)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D0)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[1])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D1) (pad_from_pad;    )    
     input  (TxBypassData_B0_D1)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D1)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[2])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D2) (pad_from_pad;    )    
     input  (TxBypassData_B0_D2)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D2)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[3])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D3) (pad_from_pad;    )    
     input  (TxBypassData_B0_D3)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D3)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[4])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D4) (pad_from_pad;    )    
     input  (TxBypassData_B0_D4)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D4)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[5])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D5) (pad_from_pad;    )    
     input  (TxBypassData_B0_D5)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D5)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[6])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D6) (pad_from_pad;    )    
     input  (TxBypassData_B0_D6)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D6)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[7])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D7) (pad_from_pad;    )    
     input  (TxBypassData_B0_D7)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D7)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[8])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D8) (pad_from_pad;    )    
     input  (TxBypassData_B0_D8)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D8)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[9])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D9) (pad_from_pad;    )    
     input  (TxBypassData_B0_D9)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D9)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[10])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D10) (pad_from_pad;    )    
     input  (TxBypassData_B0_D10)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D10)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[11])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D11) (pad_from_pad;    )    
     input  (TxBypassData_B0_D11)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D11)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B0_D[12])             (pad_pad_io;      )    
     output (RxBypassDataPad_B0_D12) (pad_from_pad;    )    
     input  (TxBypassData_B0_D12)    (pad_to_pad;      )    
     input  (TxBypassOE_B0_D12)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[0])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D0) (pad_from_pad;    )    
     input  (TxBypassData_B1_D0)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D0)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[1])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D1) (pad_from_pad;    )    
     input  (TxBypassData_B1_D1)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D1)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[2])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D2) (pad_from_pad;    )    
     input  (TxBypassData_B1_D2)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D2)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[3])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D3) (pad_from_pad;    )    
     input  (TxBypassData_B1_D3)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D3)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[4])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D4) (pad_from_pad;    )    
     input  (TxBypassData_B1_D4)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D4)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[5])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D5) (pad_from_pad;    )    
     input  (TxBypassData_B1_D5)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D5)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[6])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D6) (pad_from_pad;    )    
     input  (TxBypassData_B1_D6)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D6)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[7])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D7) (pad_from_pad;    )    
     input  (TxBypassData_B1_D7)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D7)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[8])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D8) (pad_from_pad;    )    
     input  (TxBypassData_B1_D8)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D8)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[9])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D9) (pad_from_pad;    )    
     input  (TxBypassData_B1_D9)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D9)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[10])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D10) (pad_from_pad;    )    
     input  (TxBypassData_B1_D10)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D10)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[11])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D11) (pad_from_pad;    )    
     input  (TxBypassData_B1_D11)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D11)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B1_D[12])             (pad_pad_io;      )    
     output (RxBypassDataPad_B1_D12) (pad_from_pad;    )    
     input  (TxBypassData_B1_D12)    (pad_to_pad;      )    
     input  (TxBypassOE_B1_D12)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[0])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D0) (pad_from_pad;    )    
     input  (TxBypassData_B2_D0)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D0)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[1])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D1) (pad_from_pad;    )    
     input  (TxBypassData_B2_D1)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D1)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[2])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D2) (pad_from_pad;    )    
     input  (TxBypassData_B2_D2)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D2)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[3])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D3) (pad_from_pad;    )    
     input  (TxBypassData_B2_D3)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D3)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[4])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D4) (pad_from_pad;    )    
     input  (TxBypassData_B2_D4)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D4)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[5])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D5) (pad_from_pad;    )    
     input  (TxBypassData_B2_D5)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D5)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[6])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D6) (pad_from_pad;    )    
     input  (TxBypassData_B2_D6)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D6)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[7])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D7) (pad_from_pad;    )    
     input  (TxBypassData_B2_D7)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D7)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[8])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D8) (pad_from_pad;    )    
     input  (TxBypassData_B2_D8)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D8)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[9])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D9) (pad_from_pad;    )    
     input  (TxBypassData_B2_D9)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D9)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[10])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D10) (pad_from_pad;    )    
     input  (TxBypassData_B2_D10)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D10)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[11])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D11) (pad_from_pad;    )    
     input  (TxBypassData_B2_D11)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D11)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B2_D[12])             (pad_pad_io;      )    
     output (RxBypassDataPad_B2_D12) (pad_from_pad;    )    
     input  (TxBypassData_B2_D12)    (pad_to_pad;      )    
     input  (TxBypassOE_B2_D12)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[0])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D0) (pad_from_pad;    )    
     input  (TxBypassData_B3_D0)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D0)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[1])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D1) (pad_from_pad;    )    
     input  (TxBypassData_B3_D1)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D1)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[2])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D2) (pad_from_pad;    )    
     input  (TxBypassData_B3_D2)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D2)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[3])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D3) (pad_from_pad;    )    
     input  (TxBypassData_B3_D3)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D3)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[4])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D4) (pad_from_pad;    )    
     input  (TxBypassData_B3_D4)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D4)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[5])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D5) (pad_from_pad;    )    
     input  (TxBypassData_B3_D5)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D5)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[6])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D6) (pad_from_pad;    )    
     input  (TxBypassData_B3_D6)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D6)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[7])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D7) (pad_from_pad;    )    
     input  (TxBypassData_B3_D7)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D7)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[8])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D8) (pad_from_pad;    )    
     input  (TxBypassData_B3_D8)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D8)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[9])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D9) (pad_from_pad;    )    
     input  (TxBypassData_B3_D9)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D9)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[10])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D10) (pad_from_pad;    )    
     input  (TxBypassData_B3_D10)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D10)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[11])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D11) (pad_from_pad;    )    
     input  (TxBypassData_B3_D11)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D11)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_B3_D[12])             (pad_pad_io;      )    
     output (RxBypassDataPad_B3_D12) (pad_from_pad;    )    
     input  (TxBypassData_B3_D12)    (pad_to_pad;      )    
     input  (TxBypassOE_B3_D12)      (pad_enable_high; )    
   )                                                       


   mode(                                                   
     inout (BP_CK0_T)             (pad_pad_io;      )    
     output (RxBypassDataPad_CK0_T) (pad_from_pad;    )    
     input  (TxBypassData_CK0_T)    (pad_to_pad;      )    
     input  (TxBypassOE_CK0_T)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_CK1_T)             (pad_pad_io;      )    
     output (RxBypassDataPad_CK1_T) (pad_from_pad;    )    
     input  (TxBypassData_CK1_T)    (pad_to_pad;      )    
     input  (TxBypassOE_CK1_T)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_CK0_C)             (pad_pad_io;      )    
     output (RxBypassDataPad_CK0_C) (pad_from_pad;    )    
     input  (TxBypassData_CK0_C)    (pad_to_pad;      )    
     input  (TxBypassOE_CK0_C)      (pad_enable_high; )    
   )                                                       
   mode(                                                   
     inout (BP_CK1_C)             (pad_pad_io;      )    
     output (RxBypassDataPad_CK1_C) (pad_from_pad;    )    
     input  (TxBypassData_CK1_C)    (pad_to_pad;      )    
     input  (TxBypassOE_CK1_C)      (pad_enable_high; )    
   )                                                       


   mode(      
      output (BP_MEMRESET_L)              (pad_pad_io;)
      input  (TxBypassData_MEMRESET_L)    (pad_to_pad;)
   )  
  inout (BP_ATO) ( unused; no_fault = sa0 sa1;)
  inout (BP_ATO_PLL) ( unused; no_fault = sa0 sa1;)
  inout (BP_ZN) (unused; no_fault = sa0 sa1; )
  output (dfi0_rddata_dbi_W0) (array = 1 : 0; )
  output (dfi0_rddata_dbi_W1) (array = 1 : 0; )
  output (dfi0_rddata_dbi_W2) (array = 1 : 0; )
  output (dfi0_rddata_dbi_W3) (array = 1 : 0; )
  output (dfi0_rddata_W0) (array = 15 : 0; )
  output (dfi0_rddata_W1) (array = 15 : 0; )
  output (dfi0_rddata_W2) (array = 15 : 0; )
  output (dfi0_rddata_W3) (array = 15 : 0; )
  output (dfi0_rddata_valid_W0) (array = 0 : 0; )
  output (dfi0_rddata_valid_W1) (array = 0 : 0; )
  output (dfi0_rddata_valid_W2) (array = 0 : 0; )
  output (dfi0_rddata_valid_W3) (array = 0 : 0; )
  output (dfi0_ctrlupd_ack) (array = 0 : 0; )
  output (dfi0_phyupd_req) (array = 0 : 0; )
  output (dfi0_phyupd_type) (array = 1 : 0; )
  output (dfi0_init_complete) (array = 0 : 0; )
  output (dfi0_phymstr_cs_state) (array = 1 : 0; )
  output (dfi0_phymstr_req) (array = 0 : 0; )
  output (dfi0_phymstr_state_sel) (array = 0 : 0; )
  output (dfi0_phymstr_type) (array = 1 : 0; )
  output (dfi0_lp_ctrl_ack) (array = 0 : 0; )
  output (dfi0_lp_data_ack) (array = 0 : 0; )
  output (dfi0_error) (array = 0 : 0; )
  output (dfi0_error_info) (array = 3 : 0; )
  output (dfi1_rddata_dbi_W0) (array = 1 : 0; )
  output (dfi1_rddata_dbi_W1) (array = 1 : 0; )
  output (dfi1_rddata_dbi_W2) (array = 1 : 0; )
  output (dfi1_rddata_dbi_W3) (array = 1 : 0; )
  output (dfi1_rddata_W0) (array = 15 : 0; )
  output (dfi1_rddata_W1) (array = 15 : 0; )
  output (dfi1_rddata_W2) (array = 15 : 0; )
  output (dfi1_rddata_W3) (array = 15 : 0; )
  output (dfi1_rddata_valid_W0) (array = 0 : 0; )
  output (dfi1_rddata_valid_W1) (array = 0 : 0; )
  output (dfi1_rddata_valid_W2) (array = 0 : 0; )
  output (dfi1_rddata_valid_W3) (array = 0 : 0; )
  output (dfi1_ctrlupd_ack) (array = 0 : 0; )
  output (dfi1_phyupd_req) (array = 0 : 0; )
  output (dfi1_phyupd_type) (array = 1 : 0; )
  output (dfi1_init_complete) (array = 0 : 0; )
  output (dfi1_phymstr_cs_state) (array = 1 : 0; )
  output (dfi1_phymstr_req) (array = 0 : 0; )
  output (dfi1_phymstr_state_sel) (array = 0 : 0; )
  output (dfi1_phymstr_type) (array = 1 : 0; )
  output (dfi1_lp_ctrl_ack) (array = 0 : 0; )
  output (dfi1_lp_data_ack) (array = 0 : 0; )
  output (dfi1_error) (array = 0 : 0; )
  output (dfi1_error_info) (array = 3 : 0; )
  output (dwc_lpddr5xphy_dto) (array = 1 : 0; )
  output (dwc_lpddr5xphy_pll_lock) ( )
  output (DdrPhyCsrCmdTdr_Tdo) ( )
  output (DdrPhyCsrRdDataTdr_Tdo) ( )
  output (PhyInt_n) (array = 15 : 0; )
  output (PhyInt_fault) (array = 5 : 0; )
  output (scan_so) (array = 1367 : 0; )
  output (haddr_ahb) (array = 13 : 0; )
  output (hburst_ahb) (array = 2 : 0; )
  output (hmastlock_ahb) ( )
  output (hprot_ahb) (array = 3 : 0; )
  output (hsize_ahb) (array = 2 : 0; )
  output (htrans_ahb) (array = 1 : 0; )
  output (hwdata_ahb) (array = 31 : 0; )
  output (hwrite_ahb) ( )
  output (hclk_ahb) ( )
  output (hresetn_ahb) ( )
  output (PREADY_APB) ( )
  output (PRDATA_APB) (array = 31 : 0; )
  output (PRDATA_PAR_APB) (array = 3 : 0; )
  output (PSLVERR_APB) ( )
  output (iccm0_bank0_clk) ( )
  output (iccm0_data_din0) (array = 77 : 0; )
  output (iccm0_data_addr0) (array = 16 : 4; )
  output (iccm0_data_cen0) ( )
  output (iccm0_data_wen0) ( )
  output (iccm0_data_wem0) (array = 9 : 0; )
  output (iccm0_bank1_clk) ( )
  output (iccm0_data_din1) (array = 77 : 0; )
  output (iccm0_data_addr1) (array = 16 : 4; )
  output (iccm0_data_cen1) ( )
  output (iccm0_data_wen1) ( )
  output (iccm0_data_wem1) (array = 9 : 0; )
  output (clk_dccm_bank0_lo) ( )
  output (clk_dccm_bank0_hi) ( )
  output (dccm_bank0_cs_lo) ( )
  output (dccm_bank0_cs_hi) ( )
  output (dccm_bank0_addr_lo) (array = 12 : 0; )
  output (dccm_bank0_addr_hi) (array = 12 : 0; )
  output (dccm_bank0_we_lo) ( )
  output (dccm_bank0_we_hi) ( )
  output (dccm_bank0_wem) (array = 9 : 0; )
  output (dccm_bank0_din) (array = 77 : 0; )
  output (clk_dccm_bank1_lo) ( )
  output (clk_dccm_bank1_hi) ( )
  output (dccm_bank1_cs_lo) ( )
  output (dccm_bank1_cs_hi) ( )
  output (dccm_bank1_addr_lo) (array = 12 : 0; )
  output (dccm_bank1_addr_hi) (array = 12 : 0; )
  output (dccm_bank1_we_lo) ( )
  output (dccm_bank1_we_hi) ( )
  output (dccm_bank1_wem) (array = 9 : 0; )
  output (dccm_bank1_din) (array = 77 : 0; )
  output (bc_din0) (array = 63 : 0; )
  output (bc_addr0) (array = 11 : 4; )
  output (bc_me0) ( )
  output (bc_we0) ( )
  output (bc_wem0) (array = 63 : 0; )
  output (gs_din0) (array = 7 : 0; )
  output (gs_addr0) (array = 13 : 4; )
  output (gs_me0) ( )
  output (gs_we0) ( )
  output (gs_wem0) (array = 7 : 0; )
  output (bc_ram0_clk) ( )
  output (gs_ram0_clk) ( )
  output (bc_din1) (array = 63 : 0; )
  output (bc_addr1) (array = 11 : 4; )
  output (bc_me1) ( )
  output (bc_we1) ( )
  output (bc_wem1) (array = 63 : 0; )
  output (gs_din1) (array = 7 : 0; )
  output (gs_addr1) (array = 13 : 4; )
  output (gs_me1) ( )
  output (gs_we1) ( )
  output (gs_wem1) (array = 7 : 0; )
  output (bc_ram1_clk) ( )
  output (gs_ram1_clk) ( )
  output (acsm_data_din) (array = 71 : 0; )
  output (acsm_data_addr) (array = 10 : 0; )
  output (acsm_data_ce) ( )
  output (acsm_data_we) ( )
  output (acsm_data_clk) ( )
  output (pie_data_din) (array = 55 : 0; )
  output (pie_data_addr) (array = 11 : 0; )
  output (pie_data_ce) ( )
  output (pie_data_we) ( )
  output (pie_data_clk) ( )
  output (dwc_lpddr5xphy_pmu_busy) ( )
  output (RxBypassDataPad_MEMRESET_L) ( )
  output (RxBypassDataPad_B0_D0) ( )
  output (RxBypassDataPad_B0_D1) ( )
  output (RxBypassDataPad_B0_D2) ( )
  output (RxBypassDataPad_B0_D3) ( )
  output (RxBypassDataPad_B0_D4) ( )
  output (RxBypassDataPad_B0_D5) ( )
  output (RxBypassDataPad_B0_D6) ( )
  output (RxBypassDataPad_B0_D7) ( )
  output (RxBypassDataPad_B0_D8) ( )
  output (RxBypassDataPad_B0_D9) ( )
  output (RxBypassDataPad_B0_D10) ( )
  output (RxBypassDataPad_B0_D11) ( )
  output (RxBypassDataPad_B0_D12) ( )
  output (RxBypassDataPad_B1_D0) ( )
  output (RxBypassDataPad_B1_D1) ( )
  output (RxBypassDataPad_B1_D2) ( )
  output (RxBypassDataPad_B1_D3) ( )
  output (RxBypassDataPad_B1_D4) ( )
  output (RxBypassDataPad_B1_D5) ( )
  output (RxBypassDataPad_B1_D6) ( )
  output (RxBypassDataPad_B1_D7) ( )
  output (RxBypassDataPad_B1_D8) ( )
  output (RxBypassDataPad_B1_D9) ( )
  output (RxBypassDataPad_B1_D10) ( )
  output (RxBypassDataPad_B1_D11) ( )
  output (RxBypassDataPad_B1_D12) ( )
  output (RxBypassDataPad_B2_D0) ( )
  output (RxBypassDataPad_B2_D1) ( )
  output (RxBypassDataPad_B2_D2) ( )
  output (RxBypassDataPad_B2_D3) ( )
  output (RxBypassDataPad_B2_D4) ( )
  output (RxBypassDataPad_B2_D5) ( )
  output (RxBypassDataPad_B2_D6) ( )
  output (RxBypassDataPad_B2_D7) ( )
  output (RxBypassDataPad_B2_D8) ( )
  output (RxBypassDataPad_B2_D9) ( )
  output (RxBypassDataPad_B2_D10) ( )
  output (RxBypassDataPad_B2_D11) ( )
  output (RxBypassDataPad_B2_D12) ( )
  output (RxBypassDataPad_B3_D0) ( )
  output (RxBypassDataPad_B3_D1) ( )
  output (RxBypassDataPad_B3_D2) ( )
  output (RxBypassDataPad_B3_D3) ( )
  output (RxBypassDataPad_B3_D4) ( )
  output (RxBypassDataPad_B3_D5) ( )
  output (RxBypassDataPad_B3_D6) ( )
  output (RxBypassDataPad_B3_D7) ( )
  output (RxBypassDataPad_B3_D8) ( )
  output (RxBypassDataPad_B3_D9) ( )
  output (RxBypassDataPad_B3_D10) ( )
  output (RxBypassDataPad_B3_D11) ( )
  output (RxBypassDataPad_B3_D12) ( )
  output (RxBypassDataRcv_B0_D0) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D1) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D2) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D3) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D4) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D5) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D6) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D7) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D8) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D9) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D10) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D11) (array = 1 : 0; )
  output (RxBypassDataRcv_B0_D12) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D0) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D1) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D2) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D3) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D4) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D5) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D6) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D7) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D8) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D9) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D10) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D11) (array = 1 : 0; )
  output (RxBypassDataRcv_B1_D12) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D0) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D1) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D2) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D3) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D4) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D5) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D6) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D7) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D8) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D9) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D10) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D11) (array = 1 : 0; )
  output (RxBypassDataRcv_B2_D12) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D0) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D1) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D2) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D3) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D4) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D5) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D6) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D7) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D8) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D9) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D10) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D11) (array = 1 : 0; )
  output (RxBypassDataRcv_B3_D12) (array = 1 : 0; )
  output (RxBypassDataRcv_A0) (array = 1 : 0; )
  output (RxBypassDataRcv_A1) (array = 1 : 0; )
  output (RxBypassDataRcv_A2) (array = 1 : 0; )
  output (RxBypassDataRcv_A3) (array = 1 : 0; )
  output (RxBypassDataRcv_A4) (array = 1 : 0; )
  output (RxBypassDataRcv_A5) (array = 1 : 0; )
  output (RxBypassDataRcv_A6) (array = 1 : 0; )
  output (RxBypassDataRcv_A7) (array = 1 : 0; )
  output (RxBypassDataRcv_A8) (array = 1 : 0; )
  output (RxBypassDataRcv_A9) (array = 1 : 0; )
  output (RxBypassDataRcv_A10) (array = 1 : 0; )
  output (RxBypassDataRcv_A11) (array = 1 : 0; )
  output (RxBypassDataRcv_A12) (array = 1 : 0; )
  output (RxBypassDataRcv_A13) (array = 1 : 0; )
  output (RxBypassDataRcv_A14) (array = 1 : 0; )
  output (RxBypassDataRcv_A15) (array = 1 : 0; )
  output (RxBypassDataRcv_A16) (array = 1 : 0; )
  output (RxBypassDataRcv_A17) (array = 1 : 0; )
  output (RxBypassDataRcv_A18) (array = 1 : 0; )
  output (RxBypassDataRcv_A19) (array = 1 : 0; )
  output (RxBypassDataPad_A) (array = 19 : 0; )
  output (RxBypassDataRcv_CK0_T) (array = 1 : 0; )
  output (RxBypassDataRcv_CK0_C) (array = 1 : 0; )
  output (RxBypassDataPad_CK0_T) ( )
  output (RxBypassDataPad_CK0_C) ( )
  output (RxBypassDataRcv_CK1_T) (array = 1 : 0; )
  output (RxBypassDataRcv_CK1_C) (array = 1 : 0; )
  output (RxBypassDataPad_CK1_T) ( )
  output (RxBypassDataPad_CK1_C) ( )
  output (VIO_TIEHI) ( )
  output (BP_MEMRESET_L) ( )
)  // Empty Verilog Module.
