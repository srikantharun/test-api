#!/bin/bash


## Read this to understand the tests
## https://axeleraai.sharepoint.com/:b:/r/sites/AXELERAAI-ResearchandDevelopment/Gedeelde%20documenten/Research%20and%20Development/hw/doc/vendors/Synopsys/doc/PCIe/PHY/Gen4%20SF5A/2.01a/dwc_c20pcie4_ate_test_bench_appnote.pdf?csf=1&web=1&e=PB0aQ9

mod_phy_dir=/scratch/workspace/ferguson/dwc_ap_lpddr5x_phy_sssf5a

base_dir=$(ls -td1 $mod_phy_dir/upcs/sim/cust_tb_regr/* | head -n 1)

echo "Using $base_dir"

jobids=""

rm -f ate_*.pdl
# Iterate over directories
for dir in ${base_dir}/*/; do
  # Check if vrun.log exists in the directory
  if [[ -f "$dir/vrun.log" ]]; then
    # Extract the directory name by removing the trailing '/'
    dirname=$(basename "$dir")

    # Grep for 'AXE' in vrun.log and pipe the output to a file named after the directory
    echo "iTopProc ${dirname} {{manuf 0}} {"  > "${dirname}"
    grep "AXE" "$dir/vrun.log" | sed 's/^.*AXE\s*//' >> "${dirname}"
    echo "}" >> "${dirname}"
    python3 ./process_file.py ${dirname} ${dirname}.pdl
    rm -f ${dirname}
    jobid=$(sbatch --wrap="emacs --quick --batch '${dirname}.pdl' --eval '(progn (tcl-mode) (indent-region (point-min) (point-max)) (save-buffer))'"  |  awk '{print $4}')
    jobids="$jobids:$jobid"
    
  else
    echo "vrun.log not found in $dir"
  fi
done

# Remove the leading colon from the jobids string
jobids=${jobids#:}
echo "All pretty printing job IDs: $jobids"
# Submit the final job with the dependency
srun --dependency=afterany:$jobids bash -c 'echo "Completed processing of $base_dir "'

rm -f ate_*.pdl~
rm slurm*.out

echo "##AUTOGENERATED by README " > ./dwc_ap_lpddr5x_phy_sssf5a_phy_regs.tcl
echo "global phy_regs " >> ./dwc_ap_lpddr5x_phy_sssf5a_phy_regs.tcl
grep define $mod_phy_dir/phy/ipxact/phy_cregs_x4.v | grep -v _rst | grep -v _size | grep -v "\[" | sed "s@16.h@0X@g" | sed 's@DWC_C20PCIE4_X4NS_@@' | awk '{print "dict set phy_regs " $3 " " $2}' >> ./dwc_ap_lpddr5x_phy_sssf5a_phy_regs.tcl

diff -ruN /data/foundry/samsung/sf5a/ip/synopsys/dwc_pcie4phy_sssf5a_x4ns/Latest/upcs/testbench $mod_phy_dir/upcs/testbench > dwc_pcie4phy_sssf5a_x4ns_testbench_diffs.patch
diff  -uN /data/foundry/samsung/sf5a/ip/synopsys/dwc_pcie4phy_sssf5a_x4ns/Latest/upcs/sim       $mod_phy_dir/upcs/sim > dwc_pcie4phy_sssf5a_x4ns_sim_diffs.patch


exit 0


#cp $mod_phy_dir . -R
#cd upcs/testbench
#patch dwc_pcie4phy_sssf5a_x4ns_testbench_diffs.patch
#cd ../sim
#patch dwc_pcie4phy_sssf5a_x4ns_sim_diffs.patch
#
#./run_ate_regression.sh -proto mp_upcs  -sim_type gtech -sim_tool vcs -acc_type 1 -fw_sim_mode fast -grid 1 -cfgfile ./run_ate_cfg_ref_100m
#The resulting vlog.run files can be parsed here and used to create the test


## These files are checkin in this directory
