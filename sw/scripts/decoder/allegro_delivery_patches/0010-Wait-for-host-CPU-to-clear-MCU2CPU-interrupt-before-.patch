From dccfb6d88aa57f2637d14fd0bc514a223464e44b Mon Sep 17 00:00:00 2001
From: Max Wipfli <max.wipfli@axelera.ai>
Date: Wed, 31 Jul 2024 06:41:03 +0000
Subject: [PATCH] Wait for host CPU to clear MCU2CPU interrupt before sending
 another one

This is required so each MCU2CPU interrupt is detected by the host CPU
separately. Otherwise, a deadlock may occur where both processors are
waiting for a signal from each other.

This is a functional change.
---
 bin/mcu/src/interrupt.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/bin/mcu/src/interrupt.c b/bin/mcu/src/interrupt.c
index 0f5b2ab..927eb54 100644
--- a/bin/mcu/src/interrupt.c
+++ b/bin/mcu/src/interrupt.c
@@ -84,6 +84,7 @@ void PlicComplete(int iIrqNb)
 
 void interrupt_routine(uint32_t num) {
 #if AL_NEWMCU 
+  volatile uint32_t *reg_it=(uint32_t*)0x0E000018;
   volatile uint32_t *reg_mcu2cpu=(uint32_t*)0x0E000020;
   volatile uint32_t *reg_extit=(uint32_t*)0x0E000448;
 #endif
@@ -101,6 +102,8 @@ void interrupt_routine(uint32_t num) {
 
 #if AL_NEWMCU 
   *reg_extit=0x1;
+  // wait for host CPU to acknowledge previous interrupt before sending next one
+  while ((*reg_it >> 30) & 0x1) {}
   *reg_mcu2cpu=1;
   int irqs = 1 << 11;
   __asm__("csrrc x0, mie, %0" : : "r" (irqs));
-- 
2.43.0

