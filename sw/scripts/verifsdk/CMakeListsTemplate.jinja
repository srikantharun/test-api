# (C) Copyright Axelera AI 2024
# All Rights Reserved
# *** Axelera AI Confidential ***
#
# File generated at {{ time_now }}.
#
# File generated by {{ command_line }}.
#

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

cmake_minimum_required(VERSION 3.13)

# built-in includes
{% for file in builtin_includes %}
include({{ file }})
{% endfor %}

# project-specific includes
{% for file in settings.cmake.includes %}
include({{ file }})
{% endfor %}

project({{ settings.project_name }} LANGUAGES C ASM)

# --------------------------------------------------------
# Run pre hook defined per platform/label
# --------------------------------------------------------
{% for type, context in attributes.items() %}
{% for k, platform in context.items() %}
run_hook(NAME pre_hook_{{ type }}_{{ k.replace(".", "_") }} CALL {{platform.pre_hook}})
{% endfor %}
{% endfor %}

# Library sources
{% for type, srcs in lib_sources.items() %}
set(src_lib_{{ type }}
{% if srcs %}
{% for src in srcs %}
    {{ src }}
{% endfor %}
{% endif %}
)
{% endfor %}

# Built-in flags from VerifSDK
set(builtin_flags
{% for flag in builtin_flags %}
    {{ flag }}
{% endfor %}
)

# Additional flags from verifsdk and command line arguments.
set(additional_flags
{% for flag in additional_flags %}
    {{ flag }}
{% endfor %}
)

# Definition of design to compile for
set(design
{% for _, platform in attributes['platforms'].items() %}
    {{ platform['name'].split('.')[0] }}
{% endfor %}
)

# Definition of the run script.
set(run_script
{% for _, platform in attributes['platforms'].items() %}
    "{{ platform.run_script }}"
{% endfor %}
)

# All the flags go here
set(verifsdk_flags
{% for type, context in attributes.items() %}
{% for name, attr in context.items() %}
{% for f in attr.flags %}
    {{ f }} # {{ name }}
{% endfor %}
{% endfor %}
{% endfor %}
)

# All the platform, label, and flavor files go here
{% for proc, attr in files.items() %}
set(src_attr_{{ proc }}
    {% for name, all_files in attr.items() %}
    {% set max_length = all_files | map('length') | max %}
    {% for file in all_files %}
    {{ file.ljust(max_length) }} # {{ name }}
    {% endfor %}
    {% endfor %}
)
{% endfor %}

# Files for the master core only
set(src_attr_default
{% for type, context in attributes.items() %}
{% for name, attr in context.items() %}
{% set max_length = attr.master | map('length') | max %}
{% if type != "flavors" or not attr.processors %}
    {% for file in attr.master %}
    {{ file.ljust(max_length) }} # {{ name }}
    {% endfor %}
{% endif %}
{% endfor %}
{% endfor %}
)

# Definition of VALID tests based on CLI arguments.
{% for _, test in tests|dictsort %}
{{ settings.cmake.callable }}(
    DESIGN ${design}
{% for key, value in test.toCmake().items() %}
    {{ key }} {{ value }}
{% endfor %}
    ADDITIONAL_FLAGS ${builtin_flags} ${additional_flags} ${verifsdk_flags}
)

{% endfor %}
