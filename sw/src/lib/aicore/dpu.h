// (C) Copyright Axelera AI 2024
// All Rights Reserved
// *** Axelera AI Confidential ***

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY.
// Use the "blueprint-engine" to regenerate this file.

/* clang-format off */

#ifndef __DPU_H__
#define __DPU_H__

//==================================================
// INCLUDES
//==================================================

#include <stdbool.h>
#include <stdint.h>

#include "module.h"

//==================================================
// MACROS
//==================================================

//==================================================
// DEFINITIONS
//==================================================

// Module IDs
#define DPU_ID_D_DPU                                (MODULE_ID_D_DPU)
#define DPU_ID_M_DPU                                (MODULE_ID_M_DPU)

// Command Formats
#define DPU_COMMAND_FORMAT_ID_LOOP_M1_N0                          (0)
#define DPU_COMMAND_FORMAT_ID_LOOP_M1_N1                          (1)
#define DPU_COMMAND_FORMAT_ID_LOOP_M1_N2                          (2)
#define DPU_COMMAND_FORMAT_ID_LOOP_M2_N0                          (3)
#define DPU_COMMAND_FORMAT_ID_LOOP_M2_N1                          (4)
#define DPU_COMMAND_FORMAT_ID_LOOP_M2_N2                          (5)
#define DPU_COMMAND_FORMAT_ID_LOOP_M3_N0                          (6)
#define DPU_COMMAND_FORMAT_ID_LOOP_M3_N1                          (7)
#define DPU_COMMAND_FORMAT_ID_LOOP_M3_N2                          (8)
#define DPU_COMMAND_FORMAT_ID_BYPASS                              (9)

//==================================================
// TYPES
//==================================================

//--------------------------------------------------
// Commands
//--------------------------------------------------

// TODO(schmuck): this should be overwritten with the actual token endpoints
typedef module_command_header_t dpu_command_header_t;

// Formats
//--------------------------------------------------

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
  } payload;
} dpu_command_format_loop_m1_n0_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
  } payload;
} dpu_command_format_loop_m1_n1_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
    uint64_t nested_1_start : 16;
    uint64_t nested_1_length : 16;
    uint64_t nested_1_iter : 24;
    uint64_t nested_1_map_main : 8;
  } payload;
} dpu_command_format_loop_m1_n2_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_7__ : 8;
  } payload;
} dpu_command_format_loop_m2_n0_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_7__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
  } payload;
} dpu_command_format_loop_m2_n1_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_7__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
    uint64_t nested_1_start : 16;
    uint64_t nested_1_length : 16;
    uint64_t nested_1_iter : 24;
    uint64_t nested_1_map_main : 8;
  } payload;
} dpu_command_format_loop_m2_n2_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_7__ : 8;
    uint64_t main_2_start : 16;
    uint64_t main_2_length : 16;
    uint64_t main_2_iter : 24;
    uint64_t __reserved_11__ : 8;
  } payload;
} dpu_command_format_loop_m3_n0_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_7__ : 8;
    uint64_t main_2_start : 16;
    uint64_t main_2_length : 16;
    uint64_t main_2_iter : 24;
    uint64_t __reserved_11__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
  } payload;
} dpu_command_format_loop_m3_n1_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t __reserved_3__ : 8;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_7__ : 8;
    uint64_t main_2_start : 16;
    uint64_t main_2_length : 16;
    uint64_t main_2_iter : 24;
    uint64_t __reserved_11__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
    uint64_t nested_1_start : 16;
    uint64_t nested_1_length : 16;
    uint64_t nested_1_iter : 24;
    uint64_t nested_1_map_main : 8;
  } payload;
} dpu_command_format_loop_m3_n2_t;

typedef struct {
  dpu_command_header_t header;
  struct {
    // No fields
  } payload;
} dpu_command_format_bypass_t;

// Command Union
//--------------------------------------------------

typedef union {
  module_command_t _command;
  dpu_command_format_loop_m1_n0_t loop_m1_n0;
  dpu_command_format_loop_m1_n1_t loop_m1_n1;
  dpu_command_format_loop_m1_n2_t loop_m1_n2;
  dpu_command_format_loop_m2_n0_t loop_m2_n0;
  dpu_command_format_loop_m2_n1_t loop_m2_n1;
  dpu_command_format_loop_m2_n2_t loop_m2_n2;
  dpu_command_format_loop_m3_n0_t loop_m3_n0;
  dpu_command_format_loop_m3_n1_t loop_m3_n1;
  dpu_command_format_loop_m3_n2_t loop_m3_n2;
  dpu_command_format_bypass_t bypass;
} dpu_command_t;

//--------------------------------------------------
// Instructions
//--------------------------------------------------

// Formats
//--------------------------------------------------

typedef struct {
  uint32_t opcode : 4;
  uint32_t dst : 7;
  uint32_t src0 : 7;
  uint32_t func : 7;
  int32_t mask_size : 7;
} dpu_instruction_format_generic_unary_op_t;

typedef struct {
  uint32_t opcode : 4;
  uint32_t dst : 7;
  uint32_t src0 : 7;
  uint32_t mask_value_sel : 7;
  int32_t mask_size : 7;
} dpu_instruction_format_unary_op_t;

typedef struct {
  uint32_t opcode : 4;
  uint32_t dst : 7;
  uint32_t src0 : 7;
  uint32_t src1 : 7;
  uint32_t func : 7;
} dpu_instruction_format_generic_binary_op_t;

typedef struct {
  uint32_t opcode : 4;
  uint32_t dst : 7;
  uint32_t src0 : 7;
  uint32_t src1 : 7;
  uint32_t bcast_offset_mode : 2;
  uint32_t loop_select : 2;
  uint32_t __reserved_6__ : 3;
} dpu_instruction_format_binary_op_t;

typedef struct {
  uint32_t opcode : 4;
  uint32_t dst : 7;
  uint32_t src0 : 7;
  uint32_t src1 : 7;
  uint32_t src2 : 7;
} dpu_instruction_format_ternary_op_t;

typedef struct {
  uint32_t opcode : 4;
  uint32_t dst : 7;
  uint32_t src0 : 7;
  int32_t mask_size : 7;
  uint32_t pseudo_func : 7;
} dpu_instruction_format_pseudo_op_unary_t;

// Instructions
//--------------------------------------------------

typedef union {
  dpu_instruction_format_generic_unary_op_t generic_unary_op;
  dpu_instruction_format_unary_op_t unary_op;
  dpu_instruction_format_generic_binary_op_t generic_binary_op;
  dpu_instruction_format_binary_op_t binary_op;
  dpu_instruction_format_ternary_op_t ternary_op;
  dpu_instruction_format_pseudo_op_unary_t pseudo_op_unary;
} dpu_instruction_t;

//--------------------------------------------------
// Interface
//--------------------------------------------------

typedef module_id_t dpu_id_t;

typedef enum {
  DPU_STATUS_OK = 0,
  DPU_STATUS_ERROR,
} dpu_status_t;

//==================================================
// GLOBAL FUNCTION PROTOTYPES
//==================================================

dpu_status_t dpu_init(void);

dpu_status_t dpu_enable_execution(dpu_id_t dpu_id);
dpu_status_t dpu_disable_execution(dpu_id_t dpu_id);
dpu_status_t dpu_poll_idle(dpu_id_t dpu_id);

dpu_status_t dpu_load_command(dpu_id_t dpu_id, dpu_command_t* command);
dpu_status_t dpu_load_instructions(dpu_id_t dpu_id, dpu_instruction_t instructions[], uint16_t count, uint16_t offset);

#endif  // __DPU_H__
