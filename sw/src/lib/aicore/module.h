// (C) Copyright Axelera AI 2024
// All Rights Reserved
// *** Axelera AI Confidential ***

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY.
// Use the "blueprint-engine" to regenerate this file.

/* clang-format off */

#ifndef __MODULE_H__
#define __MODULE_H__

//==================================================
// INCLUDES
//==================================================

#include <stdbool.h>
#include <stdint.h>

//==================================================
// MACROS
//==================================================

//==================================================
// DEFINITIONS
//==================================================

// TODO(schmuck): should this be replaced with an enum?
// id
#define MODULE_ID_D_IFD_0                                                        (0)
#define MODULE_ID_D_IFD_1                                                        (1)
#define MODULE_ID_D_ODR                                                          (2)
#define MODULE_ID_D_DPU                                                          (3)
#define MODULE_ID_D_IAU                                                          (4)
#define MODULE_ID_D_DWPU                                                         (5)
#define MODULE_ID_M_IFD_0                                                        (6)
#define MODULE_ID_M_IFD_1                                                        (7)
#define MODULE_ID_M_IFD_2                                                        (8)
#define MODULE_ID_M_IFD_W                                                        (9)
#define MODULE_ID_M_ODR                                                         (10)
#define MODULE_ID_M_IAU                                                         (11)
#define MODULE_ID_M_DPU                                                         (12)
#define MODULE_ID_M_MVMEXE                                                      (13)
#define MODULE_ID_M_MVMPRG                                                      (14)
#define MODULE_ID_HP_DMA_0                                                      (15)
#define MODULE_ID_HP_DMA_1                                                      (16)

#define MODULE_COUNT                          (17)

//==================================================
// TYPES
//==================================================

typedef uint8_t module_id_t;

typedef enum {
  MODULE_STATUS_OK = 0,
  MODULE_STATUS_ERROR,
} module_status_t;

typedef __attribute__((aligned(sizeof(uint64_t)))) struct {
  uint64_t id : 16;
  uint64_t tokens_produce : 16;
  uint64_t tokens_consume : 16;
  uint64_t command_format : 8;
  uint64_t __reserved_4__ : 8;
} module_command_header_t;

typedef __attribute__((aligned(sizeof(uint64_t)))) struct {
  module_command_header_t header;
  uint64_t payload[];
} module_command_t;

//==================================================
// GLOBAL FUNCTION PROTOTYPES
//==================================================

const char* module_get_name(module_id_t module_id);

module_status_t module_init(void);

module_status_t module_enable_execution(module_id_t module_id);
module_status_t module_disable_execution(module_id_t module_id);
module_status_t module_poll_idle(module_id_t module_id);

module_status_t module_clear_instructions(module_id_t module_id);

module_status_t module_load_command(module_id_t module_id, module_command_t* command);
module_status_t module_load_instructions(module_id_t module_id, void* instructions, uint16_t count, uint16_t offset);

// TODO(schmuck): IRQ/error checking is missing!

#endif  // __MODULE_H__
