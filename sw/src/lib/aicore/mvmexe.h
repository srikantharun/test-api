// (C) Copyright Axelera AI 2024
// All Rights Reserved
// *** Axelera AI Confidential ***

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY.
// Use the "blueprint-engine" to regenerate this file.

/* clang-format off */

#ifndef __MVMEXE_H__
#define __MVMEXE_H__

//==================================================
// INCLUDES
//==================================================

#include <stdbool.h>
#include <stdint.h>

#include "module.h"

//==================================================
// MACROS
//==================================================

//==================================================
// DEFINITIONS
//==================================================

// Module IDs
#define MVMEXE_ID_M_MVMEXE                       (MODULE_ID_M_MVMEXE)

// Command Formats
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M1_N0                       (0)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M1_N1                       (1)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M1_N2                       (2)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M2_N0                       (3)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M2_N1                       (4)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M2_N2                       (5)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M3_N0                       (6)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M3_N1                       (7)
#define MVMEXE_COMMAND_FORMAT_ID_LOOP_M3_N2                       (8)
#define MVMEXE_COMMAND_FORMAT_ID_BYPASS                           (9)

//==================================================
// TYPES
//==================================================

//--------------------------------------------------
// Commands
//--------------------------------------------------

// TODO(schmuck): this should be overwritten with the actual token endpoints
typedef module_command_header_t mvmexe_command_header_t;

// Formats
//--------------------------------------------------

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
  } payload;
} mvmexe_command_format_loop_m1_n0_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
  } payload;
} mvmexe_command_format_loop_m1_n1_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
    uint64_t nested_1_start : 16;
    uint64_t nested_1_length : 16;
    uint64_t nested_1_iter : 24;
    uint64_t nested_1_map_main : 8;
  } payload;
} mvmexe_command_format_loop_m1_n2_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_10__ : 8;
  } payload;
} mvmexe_command_format_loop_m2_n0_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_10__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
  } payload;
} mvmexe_command_format_loop_m2_n1_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_10__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
    uint64_t nested_1_start : 16;
    uint64_t nested_1_length : 16;
    uint64_t nested_1_iter : 24;
    uint64_t nested_1_map_main : 8;
  } payload;
} mvmexe_command_format_loop_m2_n2_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_10__ : 8;
    uint64_t main_2_start : 16;
    uint64_t main_2_length : 16;
    uint64_t main_2_iter : 24;
    uint64_t __reserved_14__ : 8;
  } payload;
} mvmexe_command_format_loop_m3_n0_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_10__ : 8;
    uint64_t main_2_start : 16;
    uint64_t main_2_length : 16;
    uint64_t main_2_iter : 24;
    uint64_t __reserved_14__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
  } payload;
} mvmexe_command_format_loop_m3_n1_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    uint64_t main_0_start : 16;
    uint64_t main_0_length : 16;
    uint64_t main_0_iter : 24;
    uint64_t double_bw_en : 1;
    uint64_t double_bw_mode : 1;
    uint64_t input_precision : 1;
    uint64_t __reserved_6__ : 5;
    uint64_t main_1_start : 16;
    uint64_t main_1_length : 16;
    uint64_t main_1_iter : 24;
    uint64_t __reserved_10__ : 8;
    uint64_t main_2_start : 16;
    uint64_t main_2_length : 16;
    uint64_t main_2_iter : 24;
    uint64_t __reserved_14__ : 8;
    uint64_t nested_0_start : 16;
    uint64_t nested_0_length : 16;
    uint64_t nested_0_iter : 24;
    uint64_t nested_0_map_main : 8;
    uint64_t nested_1_start : 16;
    uint64_t nested_1_length : 16;
    uint64_t nested_1_iter : 24;
    uint64_t nested_1_map_main : 8;
  } payload;
} mvmexe_command_format_loop_m3_n2_t;

typedef struct {
  mvmexe_command_header_t header;
  struct {
    // No fields
  } payload;
} mvmexe_command_format_bypass_t;

// Command Union
//--------------------------------------------------

typedef union {
  module_command_t _command;
  mvmexe_command_format_loop_m1_n0_t loop_m1_n0;
  mvmexe_command_format_loop_m1_n1_t loop_m1_n1;
  mvmexe_command_format_loop_m1_n2_t loop_m1_n2;
  mvmexe_command_format_loop_m2_n0_t loop_m2_n0;
  mvmexe_command_format_loop_m2_n1_t loop_m2_n1;
  mvmexe_command_format_loop_m2_n2_t loop_m2_n2;
  mvmexe_command_format_loop_m3_n0_t loop_m3_n0;
  mvmexe_command_format_loop_m3_n1_t loop_m3_n1;
  mvmexe_command_format_loop_m3_n2_t loop_m3_n2;
  mvmexe_command_format_bypass_t bypass;
} mvmexe_command_t;

//--------------------------------------------------
// Instructions
//--------------------------------------------------

// Instructions
//--------------------------------------------------

typedef struct {
  uint16_t a_s : 2;
  uint16_t a_u_pw : 4;
  uint16_t a_t_pw : 3;
  uint16_t wb_u_pw : 4;
  uint16_t wb_t_pw : 3;
} mvmexe_instruction_t;

//--------------------------------------------------
// Interface
//--------------------------------------------------

typedef module_id_t mvmexe_id_t;

typedef enum {
  MVMEXE_STATUS_OK = 0,
  MVMEXE_STATUS_ERROR,
} mvmexe_status_t;

//==================================================
// GLOBAL FUNCTION PROTOTYPES
//==================================================

mvmexe_status_t mvmexe_init(void);

mvmexe_status_t mvmexe_enable_execution(mvmexe_id_t mvmexe_id);
mvmexe_status_t mvmexe_disable_execution(mvmexe_id_t mvmexe_id);
mvmexe_status_t mvmexe_poll_idle(mvmexe_id_t mvmexe_id);

mvmexe_status_t mvmexe_load_command(mvmexe_id_t mvmexe_id, mvmexe_command_t* command);
mvmexe_status_t mvmexe_load_instructions(mvmexe_id_t mvmexe_id, mvmexe_instruction_t instructions[], uint16_t count, uint16_t offset);

#endif  // __MVMEXE_H__
