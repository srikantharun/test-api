// (C) Copyright Axelera AI 2024
// All Rights Reserved
// *** Axelera AI Confidential ***

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY.
// Use the "blueprint-engine" to regenerate this file.

/* clang-format off */

#ifndef __MEMPOOL_H__
#define __MEMPOOL_H__

//==================================================
// INCLUDES
//==================================================

#include <stdbool.h>
#include <stdint.h>

#include "sdk_adapter.h"

//==================================================
// MACROS
//==================================================

//==================================================
// DEFINITIONS
//==================================================

//==================================================
// TYPES
//==================================================

typedef enum {
  MEMPOOL_STATUS_OK = 0,
  MEMPOOL_STATUS_ERROR,
} mempool_status_t;

typedef struct {
  const char* name;
  uintptr_t addr;
  uint32_t size;
} mempool_t;

typedef struct {
  uint64_t offset : 40;
  uint64_t __reserved_1__ : 8;
  uint64_t idx : 8;
  uint64_t enabled : 8;
} mempool_address_t;

//==================================================
// FUNCTIONS
//==================================================

void mempool_info_dump(void);
void mempool_print_checksums(void);

mempool_status_t mempool_init(const mempool_t mempools[], uint32_t count);

bool mempool_is_addr_valid(uintptr_t addr);
uintptr_t mempool_get_addr(const mempool_address_t* addr);

#endif  // __MEMPOOL_H__
