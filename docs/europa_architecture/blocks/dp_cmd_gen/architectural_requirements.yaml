requirements:
#################################
# Command Block Format
#################################
  - block: DP_CMD_GEN
    category: FEAT
    index: 0
    description: "DP_CMD_GEN command blocks shall contain a 2 byte start address. Value represents offset in commands, not bytes"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 1
    description: "DP_CMD_GEN command blocks shall contain a 2 byte length, start + length - 1 = end"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 2
    description: "DP_CMD_GEN command blocks shall contain a 3 byte iteration count"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 3
    description: "DP_CMD_GEN command blocks shall contain a 1 byte extra field. This can be interpretted differently depending on teh destination data path"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 4
    description: "DP_CMD_GEN command blocks shall not provide any value checking or sanity on the extra command block field"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 5
    description: "DP_CMD_GEN command blocks shall zero out all unused fields, as indicated by the command block format"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 6
    description: "DP_CMD_GEN shall support single loop command blocks (loop_m1_n0)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 7
    description: "DP_CMD_GEN shall support nested loop command blocks (loop_m1_n1)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 8
    description: "DP_CMD_GEN shall support double nested loop command blocks (loop_m1_n2)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 9
    description: "DP_CMD_GEN shall support 2 loop command blocks (loop_m2_n0)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 10
    description: "DP_CMD_GEN shall support 2 loop command blocks, with single nested loop (loop_m2_n1)"
    criticality: bronze
    owner: Stefan Mach


  - block: DP_CMD_GEN
    category: FEAT
    index: 11
    description: "DP_CMD_GEN shall support 2 loop command blocks, with double nesteded loop (loop_m2_n2)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 12
    description: "DP_CMD_GEN shall support 3 loop command blocks (loop_m3_n0)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 13
    description: "DP_CMD_GEN shall support 3 loop command blocks, with single nested loop  (loop_m3_n1)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 14
    description: "DP_CMD_GEN shall support 3 loop command blocks, , with double nesteded loop  (loop_m3_n2)"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 15
    description: "DP_CMD_GEN nested loops can be within any main loop, defined by the map_main field"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 16
    description: "DP_CMD_GEN second nested loop can be within any main loop, or the first nested loop"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 17
    description: "DP_CMD_GEN nested loops can have the same start address as their parent"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 18
    description: "DP_CMD_GEN nested loops can have the same end address as their parent"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 19
    description: "DP_CMD_GEN nested loops can be inside separate main loops"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 20
    description: "DP_CMD_GEN main_0, main_1 and main_2 have no order dependency between each other"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 21
    description: "DP_CMD_GEN when co-nested nested_0 must end before nested_1 starts. (see nested_order error)"
    criticality: bronze
    owner: Stefan Mach

#################################
# Bypass
#################################
  - block: DP_CMD_GEN
    category: FEAT
    index: 50
    description: "DP_CMD_GEN Bypass command blocks result in a single dp command, last shall always be indicated"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 51
    description: "DP_CMD_GEN Bypass command blocks shall zero out the dp comand data"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 52
    description: "DP_CMD_GEN Bypass command blocks shall zero out the dp command iteration fields"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 53
    description: "DP_CMD_GEN Bypass command blocks shall not generate errors"
    criticality: bronze
    owner: Stefan Mach

#################################
# Error Conditions
#################################
  - block: DP_CMD_GEN
    category: FEAT
    index: 100
    description: "DP_CMD_GEN command blocks with formats not described previously shall generate an illegal_program error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 101
    description: "DP_CMD_GEN command blocks with empty main_0 loop shall generate an empty_program error "
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 102
    description: "DP_CMD_GEN command blocks where the end address of the main_0 loop is outside the defined instruction storage shall generate a main_0_length error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 103
    description: "DP_CMD_GEN command blocks where the end address of the main_1 loop is outside the defined instruction storage shall generate a main_1_length error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 104
    description: "DP_CMD_GEN command blocks where the end address of the main_2 loop is outside the defined instruction storage shall generate a main_2_length error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 105
    description: "DP_CMD_GEN command blocks where the end address of the nested_0 loop is outside the defined instruction storage shall generate a nested_0_length error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 106
    description: "DP_CMD_GEN command blocks where the end address of the nested_1 loop is outside the defined instruction storage shall generate a nested_1_length error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 107
    description: "DP_CMD_GEN command blocks where the map_main for nested_0 does not indicate an enabled main loop (as defined by the format) shall generate a nested_0_mapping error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 108
    description: "DP_CMD_GEN command blocks where the map_main for nested_1 does not indicate an enabled main loop (as defined by the format) shall generate a nested_1_mapping error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 109
    description: "DP_CMD_GEN command blocks where the start or end (or both) for the nested_0 loop sits outside the range of its main loop shall generate a nested_0_segfault error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 110
    description: "DP_CMD_GEN command blocks where the start or end (or both) for the nested_1 loop sits outside the range of its main loop shall generate a nested_1_segfault error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 111
    description: "DP_CMD_GEN command blocks where nested_1 starts and ends before nested_0 (in the same main loop) shall generate a nested_order error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 112
    description: "DP_CMD_GEN command blocks where nested_1 starts but doesn't end before nested_0 (in the same main loop) shall generate a nested_nesting error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 113
    description: "DP_CMD_GEN command blocks where nested_1 starts inside nested_0, but ends outside (in the same main loop) shall generate a nested_overlap error"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 114
    description: "DP_CMD_GEN command blocks can generate multiple errors for a single command block"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 115
    description: "DP_CMD_GEN nested_nesting and nested_overlap errors are mutually exclusive"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 116
    description: "DP_CMD_GEN comand blocks that generate errors always indicate cmdb_done and the error in the same cycle"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 117
    description: "DP_CMD_GEN errors shall only be indicated when cmdb_done is asserted"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 118
    description: "DP_CMD_GEN command blocks that generate errors will produce no commands"
    criticality: bronze
    owner: Stefan Mach

#################################
# CMDB Interface
#################################

  - block: DP_CMD_GEN
    category: FEAT
    index: 200
    description: "DP_CMD_GEN cmdb_valid shall be held and cmdb_command stable until cmdb_ready is asserted"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 201
    description: "DP_CMD_GEN can accept mutliple outstanding command blocks. Back pressure is applied via cmdb_ready signal"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 202
    description: "DP_CMD_GEN shall raise cmdb_done as a result of decoding and illegal command block or when the data path indicates command_done"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 203
    description: "DP_CMD_GEN flush is not supported and must be tied to zero"
    criticality: bronze
    owner: Stefan Mach

#################################
#  Command Interface
#################################

  - block: DP_CMD_GEN
    category: FEAT
    index: 300
    description: "DP_CMD_GEN command_valid shall be held and command_data, command_metadata and command_iterations stable until command_ready is asserted"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 301
    description: "DP_CMD_GEN command_last shall shall only be asserted when command_valid is asserted and indicating the final command from the active command block"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 302
    description: "DP_CMD_GEN metadata must be stable through all commands of an active command block"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 303
    description: "DP_CMD_GEN Loop iterations shall be zero outside of active loops"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 304
    description: "DP_CMD_GEN Loop iterations shall increment on command accepted (valid and ready) for the deepest active loop"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 305
    description: "DP_CMD_GEN overall_last shall only be asserted in the final iteration of the deepest active loop"
    criticality: bronze
    owner: Stefan Mach

  - block: DP_CMD_GEN
    category: FEAT
    index: 306
    description: "DP_CMD_GEN main_index shall indicated the main active loop and be 0 when inactive"
    criticality: bronze
    owner: Stefan Mach

#################################
#  Command Interface
#################################
  - block: DP_CMD_GEN
    category: FEAT
    index: 400
    description: "DP_CMD_GEN must support processing commands while the RAM is being written simultaneously"
    criticality: bronze
    owner: Stefan Mach
