requirements:
#################################
# REGISTER LAYER
#################################
- block: DWPU
  category: RAL
  index: 0
  description: "DWPU access the RW register fields for read and write access"
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: RAL
  index: 1
  description: "DWPU access the RO register fields for read without write"
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: RAL
  index: 2
  description: "DWPU shall support the Unmapped register access (csr related)"
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: RAL
  index: 3
  description: "DWPU shall support the memory unmapped access (full DWPU memory space)."
  criticality: bronze
  owner: Jorge Carvalho
#################################
# DATAPATH LAYER
#################################
- block: DWPU
  category: FEAT
  index: 0
  description: The DWPU have 64 independent channels to process data.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 1
  description: Each DWPU channel receives 8 bits of input data.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 2
  description: Each DWPU channel produces 26 bits of output data.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 3
  description: DWPU has an instruction memory with 1024 positions.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 4
  description: DWPU instruction has 128 bits.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 5
  description: DWPU has 128 scratchpad registers (SP). SP 0 is equal to 0 and SP 1 is equal to input data, SP2 to SP127 are updated using shifting mechanism.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 6
  description: DWPU has 64 weight register, also called weight buffers (wb).
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 7
  description: DWPU can perform operation with 9 scraptchpad registers and 9 weight buffers.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 8
  description: DWPU can select the 9 scraptchpad registers independently for each instruction.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 9
  description: DWPU can select the 9 weight buffers independently for each instruction.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 10
  description: DWPU instruction has a field that shifts the scratchpad registers (sp) at the end of processing. The register sp1 to sp126 are shifted up to register sp2 to sp127.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 11
  description: DWPU instruction has a field that shifts the weight buffers (wb) at the end of proccessing. The input data is loaded to wb0 and values already present are shifted up.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 12
  description: DWPU instruction has a field that specify if it is the last push to the output stream.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 13
  description: DWPU instruction has a field (op_exe) that enables the DWPU to perform the operation and push the result to the output stream.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: FEAT
  index: 14
  description: DWPU instruction has a field to specify which type of operation is running, SOP (Sum Of Products), SUM, MAX or MIN.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 0
  description: The DWPU weight registers can be configured to be signed or unsigned. That configuration will be applied to all weights registers.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 1
  description: The DWPU scraptchpad registers can be configured to be signed or unsigned. That configuration will be applied to all image registers.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 2
  description: The DWPU can skip illegal programs.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 3
  description: The DWPU has a debug software interrupt.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 4
  description: The DWPU has a command FIFO with 16 positions.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 5
  description: The DWPU triggers an interrupt when command FIFO is overflowed.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 6
  description: DWPU has capability to be in bypass mode where input data is sent to the output data. If image signed is set to 1, then the output is equal to signed input data, otherwise, is equal to input data.
  criticality: bronze
  owner: Jorge Carvalho
- block: DWPU
  category: CMDBLK
  index: 7
  description: DWPU uses the Unified DP command generator.
  criticality: bronze
  owner: Jorge Carvalho

